<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="326" onload="init(evt)" viewBox="0 0 1200 326" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="326" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="309.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="309.00"> </text><svg id="frames" x="10" width="1180" total_samples="1196658"><g><title>field::batch_inverse_checked (432 samples, 0.04%)</title><rect x="0.0006%" y="197" width="0.0361%" height="15" fill="rgb(227,0,7)" fg:x="7" fg:w="432"/><text x="0.2506%" y="207.50"></text></g><g><title>verifier::concrete::skeleton_instance::&lt;impl verifier::skeleton::QueryValues&lt;21_usize,14_usize,26_usize,11_usize,279_usize,30_usize,184_usize,4_usize,128_usize,5_usize&gt;&gt;::fill (318 samples, 0.03%)</title><rect x="0.0441%" y="197" width="0.0266%" height="15" fill="rgb(217,0,24)" fg:x="528" fg:w="318"/><text x="0.2941%" y="207.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (795 samples, 0.07%)</title><rect x="1.0879%" y="181" width="0.0664%" height="15" fill="rgb(221,193,54)" fg:x="13019" fg:w="795"/><text x="1.3379%" y="191.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (795 samples, 0.07%)</title><rect x="1.0879%" y="165" width="0.0664%" height="15" fill="rgb(248,212,6)" fg:x="13019" fg:w="795"/><text x="1.3379%" y="175.50"></text></g><g><title>field::base::Mersenne31Field::mul_assign_impl (318 samples, 0.03%)</title><rect x="1.1590%" y="149" width="0.0266%" height="15" fill="rgb(208,68,35)" fg:x="13869" fg:w="318"/><text x="1.4090%" y="159.50"></text></g><g><title>field::ops::mul_mod (212 samples, 0.02%)</title><rect x="1.1678%" y="133" width="0.0177%" height="15" fill="rgb(232,128,0)" fg:x="13975" fg:w="212"/><text x="1.4178%" y="143.50"></text></g><g><title>field::ops::mul_mod_rt_riscv (212 samples, 0.02%)</title><rect x="1.1678%" y="117" width="0.0177%" height="15" fill="rgb(207,160,47)" fg:x="13975" fg:w="212"/><text x="1.4178%" y="127.50"></text></g><g><title>&lt;field::complex::Mersenne31Complex as field::field::Field&gt;::mul_assign (424 samples, 0.04%)</title><rect x="1.1545%" y="181" width="0.0354%" height="15" fill="rgb(228,23,34)" fg:x="13816" fg:w="424"/><text x="1.4045%" y="191.50"></text></g><g><title>field::complex::Mersenne31Complex::mul_assign_impl (424 samples, 0.04%)</title><rect x="1.1545%" y="165" width="0.0354%" height="15" fill="rgb(218,30,26)" fg:x="13816" fg:w="424"/><text x="1.4045%" y="175.50"></text></g><g><title>&lt;field::quartic::Mersenne31Quartic as core::cmp::PartialEq&gt;::eq (435 samples, 0.04%)</title><rect x="1.1900%" y="181" width="0.0364%" height="15" fill="rgb(220,122,19)" fg:x="14240" fg:w="435"/><text x="1.4400%" y="191.50"></text></g><g><title>&lt;field::complex::Mersenne31Complex as core::cmp::PartialEq&gt;::eq (434 samples, 0.04%)</title><rect x="1.1901%" y="165" width="0.0363%" height="15" fill="rgb(250,228,42)" fg:x="14241" fg:w="434"/><text x="1.4401%" y="175.50"></text></g><g><title>field::base::Mersenne31Field::add_assign_impl (1,128 samples, 0.09%)</title><rect x="1.2677%" y="133" width="0.0943%" height="15" fill="rgb(240,193,28)" fg:x="15170" fg:w="1128"/><text x="1.5177%" y="143.50"></text></g><g><title>field::ops::add_mod (227 samples, 0.02%)</title><rect x="1.3430%" y="117" width="0.0190%" height="15" fill="rgb(216,20,37)" fg:x="16071" fg:w="227"/><text x="1.5930%" y="127.50"></text></g><g><title>field::ops::add_mod_rt_riscv (227 samples, 0.02%)</title><rect x="1.3430%" y="101" width="0.0190%" height="15" fill="rgb(206,188,39)" fg:x="16071" fg:w="227"/><text x="1.5930%" y="111.50"></text></g><g><title>field::base::Mersenne31Field::mul_assign_impl (1,190 samples, 0.10%)</title><rect x="1.3620%" y="133" width="0.0994%" height="15" fill="rgb(217,207,13)" fg:x="16298" fg:w="1190"/><text x="1.6120%" y="143.50"></text></g><g><title>field::ops::mul_mod (872 samples, 0.07%)</title><rect x="1.3885%" y="117" width="0.0729%" height="15" fill="rgb(231,73,38)" fg:x="16616" fg:w="872"/><text x="1.6385%" y="127.50"></text></g><g><title>field::ops::mul_mod_rt_riscv (872 samples, 0.07%)</title><rect x="1.3885%" y="101" width="0.0729%" height="15" fill="rgb(225,20,46)" fg:x="16616" fg:w="872"/><text x="1.6385%" y="111.50"></text></g><g><title>&lt;field::quartic::Mersenne31Quartic as field::field::FieldExtension&lt;field::complex::Mersenne31Complex&gt;&gt;::mul_assign_by_base (3,123 samples, 0.26%)</title><rect x="1.2367%" y="181" width="0.2610%" height="15" fill="rgb(210,31,41)" fg:x="14799" fg:w="3123"/><text x="1.4867%" y="191.50"></text></g><g><title>&lt;field::complex::Mersenne31Complex as field::field::Field&gt;::mul_assign (3,123 samples, 0.26%)</title><rect x="1.2367%" y="165" width="0.2610%" height="15" fill="rgb(221,200,47)" fg:x="14799" fg:w="3123"/><text x="1.4867%" y="175.50"></text></g><g><title>field::complex::Mersenne31Complex::mul_assign_impl (3,123 samples, 0.26%)</title><rect x="1.2367%" y="149" width="0.2610%" height="15" fill="rgb(226,26,5)" fg:x="14799" fg:w="3123"/><text x="1.4867%" y="159.50"></text></g><g><title>field::base::Mersenne31Field::sub_assign_impl (434 samples, 0.04%)</title><rect x="1.4614%" y="133" width="0.0363%" height="15" fill="rgb(249,33,26)" fg:x="17488" fg:w="434"/><text x="1.7114%" y="143.50"></text></g><g><title>field::ops::sub_mod (222 samples, 0.02%)</title><rect x="1.4791%" y="117" width="0.0186%" height="15" fill="rgb(235,183,28)" fg:x="17700" fg:w="222"/><text x="1.7291%" y="127.50"></text></g><g><title>field::ops::sub_mod_rt_riscv (222 samples, 0.02%)</title><rect x="1.4791%" y="101" width="0.0186%" height="15" fill="rgb(221,5,38)" fg:x="17700" fg:w="222"/><text x="1.7291%" y="111.50"></text></g><g><title>&lt;field::quartic::Mersenne31Quartic as field::field::FieldExtension&lt;field::complex::Mersenne31Complex&gt;&gt;::sub_assign_base (759 samples, 0.06%)</title><rect x="1.4977%" y="181" width="0.0634%" height="15" fill="rgb(247,18,42)" fg:x="17922" fg:w="759"/><text x="1.7477%" y="191.50"></text></g><g><title>&lt;F as field::field::FieldExtension&lt;F&gt;&gt;::sub_assign_base (759 samples, 0.06%)</title><rect x="1.4977%" y="165" width="0.0634%" height="15" fill="rgb(241,131,45)" fg:x="17922" fg:w="759"/><text x="1.7477%" y="175.50"></text></g><g><title>&lt;field::complex::Mersenne31Complex as field::field::Field&gt;::sub_assign (759 samples, 0.06%)</title><rect x="1.4977%" y="149" width="0.0634%" height="15" fill="rgb(249,31,29)" fg:x="17922" fg:w="759"/><text x="1.7477%" y="159.50"></text></g><g><title>field::complex::Mersenne31Complex::sub_assign_impl (759 samples, 0.06%)</title><rect x="1.4977%" y="133" width="0.0634%" height="15" fill="rgb(225,111,53)" fg:x="17922" fg:w="759"/><text x="1.7477%" y="143.50"></text></g><g><title>field::base::Mersenne31Field::sub_assign_impl (759 samples, 0.06%)</title><rect x="1.4977%" y="117" width="0.0634%" height="15" fill="rgb(238,160,17)" fg:x="17922" fg:w="759"/><text x="1.7477%" y="127.50"></text></g><g><title>field::ops::sub_mod (229 samples, 0.02%)</title><rect x="1.5420%" y="101" width="0.0191%" height="15" fill="rgb(214,148,48)" fg:x="18452" fg:w="229"/><text x="1.7920%" y="111.50"></text></g><g><title>field::ops::sub_mod_rt_riscv (229 samples, 0.02%)</title><rect x="1.5420%" y="85" width="0.0191%" height="15" fill="rgb(232,36,49)" fg:x="18452" fg:w="229"/><text x="1.7920%" y="95.50"></text></g><g><title>&lt;prover::definitions::leaf_inclusion_verifier::blake2s_for_everything_with_alternative_compression::Blake2sForEverythingVerifierWithAlternativeCompression as prover::definitions::leaf_inclusion_verifier::LeafInclusionVerifier&gt;::new (205 samples, 0.02%)</title><rect x="1.5611%" y="181" width="0.0171%" height="15" fill="rgb(209,103,24)" fg:x="18681" fg:w="205"/><text x="1.8111%" y="191.50"></text></g><g><title>memset (123 samples, 0.01%)</title><rect x="1.5680%" y="165" width="0.0103%" height="15" fill="rgb(229,88,8)" fg:x="18763" fg:w="123"/><text x="1.8180%" y="175.50"></text></g><g><title>compiler_builtins::mem::memset (120 samples, 0.01%)</title><rect x="1.5682%" y="149" width="0.0100%" height="15" fill="rgb(213,181,19)" fg:x="18766" fg:w="120"/><text x="1.8182%" y="159.50"></text></g><g><title>compiler_builtins::mem::impls::set_bytes (120 samples, 0.01%)</title><rect x="1.5682%" y="133" width="0.0100%" height="15" fill="rgb(254,191,54)" fg:x="18766" fg:w="120"/><text x="1.8182%" y="143.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (906 samples, 0.08%)</title><rect x="1.5915%" y="181" width="0.0757%" height="15" fill="rgb(241,83,37)" fg:x="19045" fg:w="906"/><text x="1.8415%" y="191.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (906 samples, 0.08%)</title><rect x="1.5915%" y="165" width="0.0757%" height="15" fill="rgb(233,36,39)" fg:x="19045" fg:w="906"/><text x="1.8415%" y="175.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (318 samples, 0.03%)</title><rect x="1.6407%" y="149" width="0.0266%" height="15" fill="rgb(226,3,54)" fg:x="19633" fg:w="318"/><text x="1.8907%" y="159.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_add (318 samples, 0.03%)</title><rect x="1.6407%" y="133" width="0.0266%" height="15" fill="rgb(245,192,40)" fg:x="19633" fg:w="318"/><text x="1.8907%" y="143.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (195 samples, 0.02%)</title><rect x="1.8969%" y="149" width="0.0163%" height="15" fill="rgb(238,167,29)" fg:x="22700" fg:w="195"/><text x="2.1469%" y="159.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (195 samples, 0.02%)</title><rect x="1.8969%" y="133" width="0.0163%" height="15" fill="rgb(232,182,51)" fg:x="22700" fg:w="195"/><text x="2.1469%" y="143.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::nth (1,458 samples, 0.12%)</title><rect x="1.9132%" y="149" width="0.1218%" height="15" fill="rgb(231,60,39)" fg:x="22895" fg:w="1458"/><text x="2.1632%" y="159.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::nth (1,134 samples, 0.09%)</title><rect x="1.9403%" y="133" width="0.0948%" height="15" fill="rgb(208,69,12)" fg:x="23219" fg:w="1134"/><text x="2.1903%" y="143.50"></text></g><g><title>core::iter::adapters::zip::Zip&lt;A,B&gt;::super_nth (540 samples, 0.05%)</title><rect x="1.9900%" y="117" width="0.0451%" height="15" fill="rgb(235,93,37)" fg:x="23813" fg:w="540"/><text x="2.2400%" y="127.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (432 samples, 0.04%)</title><rect x="1.9990%" y="101" width="0.0361%" height="15" fill="rgb(213,116,39)" fg:x="23921" fg:w="432"/><text x="2.2490%" y="111.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (432 samples, 0.04%)</title><rect x="1.9990%" y="85" width="0.0361%" height="15" fill="rgb(222,207,29)" fg:x="23921" fg:w="432"/><text x="2.2490%" y="95.50"></text></g><g><title>&lt;core::iter::adapters::skip::Skip&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,875 samples, 0.16%)</title><rect x="1.8922%" y="165" width="0.1567%" height="15" fill="rgb(206,96,30)" fg:x="22643" fg:w="1875"/><text x="2.1422%" y="175.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::double_ended::DoubleEndedIterator&gt;::next_back (444 samples, 0.04%)</title><rect x="2.0489%" y="117" width="0.0371%" height="15" fill="rgb(218,138,4)" fg:x="24518" fg:w="444"/><text x="2.2989%" y="127.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (333 samples, 0.03%)</title><rect x="2.0581%" y="101" width="0.0278%" height="15" fill="rgb(250,191,14)" fg:x="24629" fg:w="333"/><text x="2.3081%" y="111.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (825 samples, 0.07%)</title><rect x="2.0489%" y="165" width="0.0689%" height="15" fill="rgb(239,60,40)" fg:x="24518" fg:w="825"/><text x="2.2989%" y="175.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (825 samples, 0.07%)</title><rect x="2.0489%" y="149" width="0.0689%" height="15" fill="rgb(206,27,48)" fg:x="24518" fg:w="825"/><text x="2.2989%" y="159.50"></text></g><g><title>&lt;core::iter::adapters::rev::Rev&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (825 samples, 0.07%)</title><rect x="2.0489%" y="133" width="0.0689%" height="15" fill="rgb(225,35,8)" fg:x="24518" fg:w="825"/><text x="2.2989%" y="143.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::double_ended::DoubleEndedIterator&gt;::next_back (381 samples, 0.03%)</title><rect x="2.0860%" y="117" width="0.0318%" height="15" fill="rgb(250,213,24)" fg:x="24962" fg:w="381"/><text x="2.3360%" y="127.50"></text></g><g><title>&lt;field::complex::Mersenne31Complex as field::field::BaseField&gt;::mul_by_non_residue (216 samples, 0.02%)</title><rect x="2.1178%" y="149" width="0.0181%" height="15" fill="rgb(247,123,22)" fg:x="25343" fg:w="216"/><text x="2.3678%" y="159.50"></text></g><g><title>field::base::Mersenne31Field::exp_power_of_2_impl (1,566 samples, 0.13%)</title><rect x="2.1449%" y="101" width="0.1309%" height="15" fill="rgb(231,138,38)" fg:x="25667" fg:w="1566"/><text x="2.3949%" y="111.50"></text></g><g><title>field::base::Mersenne31Field::square_impl (1,566 samples, 0.13%)</title><rect x="2.1449%" y="85" width="0.1309%" height="15" fill="rgb(231,145,46)" fg:x="25667" fg:w="1566"/><text x="2.3949%" y="95.50"></text></g><g><title>field::base::Mersenne31Field::mul_assign_impl (1,566 samples, 0.13%)</title><rect x="2.1449%" y="69" width="0.1309%" height="15" fill="rgb(251,118,11)" fg:x="25667" fg:w="1566"/><text x="2.3949%" y="79.50"></text></g><g><title>field::ops::mul_mod (1,566 samples, 0.13%)</title><rect x="2.1449%" y="53" width="0.1309%" height="15" fill="rgb(217,147,25)" fg:x="25667" fg:w="1566"/><text x="2.3949%" y="63.50"></text></g><g><title>field::ops::mul_mod_rt_riscv (1,566 samples, 0.13%)</title><rect x="2.1449%" y="37" width="0.1309%" height="15" fill="rgb(247,81,37)" fg:x="25667" fg:w="1566"/><text x="2.3949%" y="47.50"></text></g><g><title>field::base::Mersenne31Field::mul_assign_impl (378 samples, 0.03%)</title><rect x="2.2758%" y="101" width="0.0316%" height="15" fill="rgb(209,12,38)" fg:x="27233" fg:w="378"/><text x="2.5258%" y="111.50"></text></g><g><title>field::ops::mul_mod (378 samples, 0.03%)</title><rect x="2.2758%" y="85" width="0.0316%" height="15" fill="rgb(227,1,9)" fg:x="27233" fg:w="378"/><text x="2.5258%" y="95.50"></text></g><g><title>field::ops::mul_mod_rt_riscv (378 samples, 0.03%)</title><rect x="2.2758%" y="69" width="0.0316%" height="15" fill="rgb(248,47,43)" fg:x="27233" fg:w="378"/><text x="2.5258%" y="79.50"></text></g><g><title>field::base::Mersenne31Field::inverse_impl (2,106 samples, 0.18%)</title><rect x="2.1359%" y="117" width="0.1760%" height="15" fill="rgb(221,10,30)" fg:x="25559" fg:w="2106"/><text x="2.3859%" y="127.50"></text></g><g><title>&lt;field::complex::Mersenne31Complex as field::field::Field&gt;::inverse (2,484 samples, 0.21%)</title><rect x="2.1359%" y="149" width="0.2076%" height="15" fill="rgb(210,229,1)" fg:x="25559" fg:w="2484"/><text x="2.3859%" y="159.50"></text></g><g><title>field::complex::Mersenne31Complex::inverse_impl (2,484 samples, 0.21%)</title><rect x="2.1359%" y="133" width="0.2076%" height="15" fill="rgb(222,148,37)" fg:x="25559" fg:w="2484"/><text x="2.3859%" y="143.50"></text></g><g><title>field::base::Mersenne31Field::mul_assign_impl (432 samples, 0.04%)</title><rect x="2.3525%" y="117" width="0.0361%" height="15" fill="rgb(234,67,33)" fg:x="28151" fg:w="432"/><text x="2.6025%" y="127.50"></text></g><g><title>field::ops::mul_mod (432 samples, 0.04%)</title><rect x="2.3525%" y="101" width="0.0361%" height="15" fill="rgb(247,98,35)" fg:x="28151" fg:w="432"/><text x="2.6025%" y="111.50"></text></g><g><title>field::ops::mul_mod_rt_riscv (432 samples, 0.04%)</title><rect x="2.3525%" y="85" width="0.0361%" height="15" fill="rgb(247,138,52)" fg:x="28151" fg:w="432"/><text x="2.6025%" y="95.50"></text></g><g><title>&lt;field::complex::Mersenne31Complex as field::field::Field&gt;::mul_assign (648 samples, 0.05%)</title><rect x="2.3434%" y="149" width="0.0542%" height="15" fill="rgb(213,79,30)" fg:x="28043" fg:w="648"/><text x="2.5934%" y="159.50"></text></g><g><title>field::complex::Mersenne31Complex::mul_assign_impl (648 samples, 0.05%)</title><rect x="2.3434%" y="133" width="0.0542%" height="15" fill="rgb(246,177,23)" fg:x="28043" fg:w="648"/><text x="2.5934%" y="143.50"></text></g><g><title>field::base::Mersenne31Field::mul_assign_impl (324 samples, 0.03%)</title><rect x="2.4156%" y="117" width="0.0271%" height="15" fill="rgb(230,62,27)" fg:x="28907" fg:w="324"/><text x="2.6656%" y="127.50"></text></g><g><title>field::ops::mul_mod (324 samples, 0.03%)</title><rect x="2.4156%" y="101" width="0.0271%" height="15" fill="rgb(216,154,8)" fg:x="28907" fg:w="324"/><text x="2.6656%" y="111.50"></text></g><g><title>field::ops::mul_mod_rt_riscv (324 samples, 0.03%)</title><rect x="2.4156%" y="85" width="0.0271%" height="15" fill="rgb(244,35,45)" fg:x="28907" fg:w="324"/><text x="2.6656%" y="95.50"></text></g><g><title>&lt;field::complex::Mersenne31Complex as field::field::Field&gt;::square (540 samples, 0.05%)</title><rect x="2.4066%" y="149" width="0.0451%" height="15" fill="rgb(251,115,12)" fg:x="28799" fg:w="540"/><text x="2.6566%" y="159.50"></text></g><g><title>field::complex::Mersenne31Complex::square_impl (540 samples, 0.05%)</title><rect x="2.4066%" y="133" width="0.0451%" height="15" fill="rgb(240,54,50)" fg:x="28799" fg:w="540"/><text x="2.6566%" y="143.50"></text></g><g><title>&lt;field::quartic::Mersenne31Quartic as field::field::Field&gt;::inverse (4,104 samples, 0.34%)</title><rect x="2.1178%" y="165" width="0.3430%" height="15" fill="rgb(233,84,52)" fg:x="25343" fg:w="4104"/><text x="2.3678%" y="175.50"></text></g><g><title>&lt;field::quartic::Mersenne31Quartic as field::field::Field&gt;::is_zero (1,050 samples, 0.09%)</title><rect x="2.4608%" y="165" width="0.0877%" height="15" fill="rgb(207,117,47)" fg:x="29447" fg:w="1050"/><text x="2.7108%" y="175.50"></text></g><g><title>&lt;field::complex::Mersenne31Complex as field::field::Field&gt;::is_zero (1,050 samples, 0.09%)</title><rect x="2.4608%" y="149" width="0.0877%" height="15" fill="rgb(249,43,39)" fg:x="29447" fg:w="1050"/><text x="2.7108%" y="159.50"></text></g><g><title>field::complex::Mersenne31Complex::is_zero_impl (1,050 samples, 0.09%)</title><rect x="2.4608%" y="133" width="0.0877%" height="15" fill="rgb(209,38,44)" fg:x="29447" fg:w="1050"/><text x="2.7108%" y="143.50"></text></g><g><title>field::base::Mersenne31Field::is_zero_impl (666 samples, 0.06%)</title><rect x="2.4929%" y="117" width="0.0557%" height="15" fill="rgb(236,212,23)" fg:x="29831" fg:w="666"/><text x="2.7429%" y="127.50"></text></g><g><title>&lt;field::base::Mersenne31Field as field::field::Field&gt;::add_assign (279 samples, 0.02%)</title><rect x="2.5485%" y="133" width="0.0233%" height="15" fill="rgb(242,79,21)" fg:x="30497" fg:w="279"/><text x="2.7985%" y="143.50"></text></g><g><title>field::base::Mersenne31Field::add_assign_impl (279 samples, 0.02%)</title><rect x="2.5485%" y="117" width="0.0233%" height="15" fill="rgb(211,96,35)" fg:x="30497" fg:w="279"/><text x="2.7985%" y="127.50"></text></g><g><title>field::ops::add_mod (279 samples, 0.02%)</title><rect x="2.5485%" y="101" width="0.0233%" height="15" fill="rgb(253,215,40)" fg:x="30497" fg:w="279"/><text x="2.7985%" y="111.50"></text></g><g><title>field::ops::add_mod_rt_riscv (279 samples, 0.02%)</title><rect x="2.5485%" y="85" width="0.0233%" height="15" fill="rgb(211,81,21)" fg:x="30497" fg:w="279"/><text x="2.7985%" y="95.50"></text></g><g><title>&lt;field::base::Mersenne31Field as field::field::Field&gt;::double (558 samples, 0.05%)</title><rect x="2.5718%" y="133" width="0.0466%" height="15" fill="rgb(208,190,38)" fg:x="30776" fg:w="558"/><text x="2.8218%" y="143.50"></text></g><g><title>field::base::Mersenne31Field::double_impl (558 samples, 0.05%)</title><rect x="2.5718%" y="117" width="0.0466%" height="15" fill="rgb(235,213,38)" fg:x="30776" fg:w="558"/><text x="2.8218%" y="127.50"></text></g><g><title>field::base::Mersenne31Field::add_assign_impl (558 samples, 0.05%)</title><rect x="2.5718%" y="101" width="0.0466%" height="15" fill="rgb(237,122,38)" fg:x="30776" fg:w="558"/><text x="2.8218%" y="111.50"></text></g><g><title>field::ops::add_mod (558 samples, 0.05%)</title><rect x="2.5718%" y="85" width="0.0466%" height="15" fill="rgb(244,218,35)" fg:x="30776" fg:w="558"/><text x="2.8218%" y="95.50"></text></g><g><title>field::ops::add_mod_rt_riscv (558 samples, 0.05%)</title><rect x="2.5718%" y="69" width="0.0466%" height="15" fill="rgb(240,68,47)" fg:x="30776" fg:w="558"/><text x="2.8218%" y="79.50"></text></g><g><title>&lt;field::complex::Mersenne31Complex as field::field::BaseField&gt;::mul_by_non_residue (1,116 samples, 0.09%)</title><rect x="2.5485%" y="149" width="0.0933%" height="15" fill="rgb(210,16,53)" fg:x="30497" fg:w="1116"/><text x="2.7985%" y="159.50"></text></g><g><title>&lt;field::base::Mersenne31Field as field::field::Field&gt;::sub_assign (279 samples, 0.02%)</title><rect x="2.6185%" y="133" width="0.0233%" height="15" fill="rgb(235,124,12)" fg:x="31334" fg:w="279"/><text x="2.8685%" y="143.50"></text></g><g><title>field::base::Mersenne31Field::sub_assign_impl (279 samples, 0.02%)</title><rect x="2.6185%" y="117" width="0.0233%" height="15" fill="rgb(224,169,11)" fg:x="31334" fg:w="279"/><text x="2.8685%" y="127.50"></text></g><g><title>field::ops::sub_mod (279 samples, 0.02%)</title><rect x="2.6185%" y="101" width="0.0233%" height="15" fill="rgb(250,166,2)" fg:x="31334" fg:w="279"/><text x="2.8685%" y="111.50"></text></g><g><title>field::ops::sub_mod_rt_riscv (279 samples, 0.02%)</title><rect x="2.6185%" y="85" width="0.0233%" height="15" fill="rgb(242,216,29)" fg:x="31334" fg:w="279"/><text x="2.8685%" y="95.50"></text></g><g><title>&lt;field::complex::Mersenne31Complex as field::field::Field&gt;::add_assign (1,674 samples, 0.14%)</title><rect x="2.6418%" y="149" width="0.1399%" height="15" fill="rgb(230,116,27)" fg:x="31613" fg:w="1674"/><text x="2.8918%" y="159.50"></text></g><g><title>field::complex::Mersenne31Complex::add_assign_impl (1,674 samples, 0.14%)</title><rect x="2.6418%" y="133" width="0.1399%" height="15" fill="rgb(228,99,48)" fg:x="31613" fg:w="1674"/><text x="2.8918%" y="143.50"></text></g><g><title>field::base::Mersenne31Field::add_assign_impl (1,674 samples, 0.14%)</title><rect x="2.6418%" y="117" width="0.1399%" height="15" fill="rgb(253,11,6)" fg:x="31613" fg:w="1674"/><text x="2.8918%" y="127.50"></text></g><g><title>field::ops::add_mod (1,674 samples, 0.14%)</title><rect x="2.6418%" y="101" width="0.1399%" height="15" fill="rgb(247,143,39)" fg:x="31613" fg:w="1674"/><text x="2.8918%" y="111.50"></text></g><g><title>field::ops::add_mod_rt_riscv (1,674 samples, 0.14%)</title><rect x="2.6418%" y="85" width="0.1399%" height="15" fill="rgb(236,97,10)" fg:x="31613" fg:w="1674"/><text x="2.8918%" y="95.50"></text></g><g><title>field::base::Mersenne31Field::add_assign_impl (837 samples, 0.07%)</title><rect x="2.7817%" y="117" width="0.0699%" height="15" fill="rgb(233,208,19)" fg:x="33287" fg:w="837"/><text x="3.0317%" y="127.50"></text></g><g><title>field::ops::add_mod (837 samples, 0.07%)</title><rect x="2.7817%" y="101" width="0.0699%" height="15" fill="rgb(216,164,2)" fg:x="33287" fg:w="837"/><text x="3.0317%" y="111.50"></text></g><g><title>field::ops::add_mod_rt_riscv (837 samples, 0.07%)</title><rect x="2.7817%" y="85" width="0.0699%" height="15" fill="rgb(220,129,5)" fg:x="33287" fg:w="837"/><text x="3.0317%" y="95.50"></text></g><g><title>field::base::Mersenne31Field::mul_assign_impl (3,516 samples, 0.29%)</title><rect x="2.8516%" y="117" width="0.2938%" height="15" fill="rgb(242,17,10)" fg:x="34124" fg:w="3516"/><text x="3.1016%" y="127.50"></text></g><g><title>field::ops::mul_mod (3,348 samples, 0.28%)</title><rect x="2.8656%" y="101" width="0.2798%" height="15" fill="rgb(242,107,0)" fg:x="34292" fg:w="3348"/><text x="3.1156%" y="111.50"></text></g><g><title>field::ops::mul_mod_rt_riscv (3,348 samples, 0.28%)</title><rect x="2.8656%" y="85" width="0.2798%" height="15" fill="rgb(251,28,31)" fg:x="34292" fg:w="3348"/><text x="3.1156%" y="95.50"></text></g><g><title>&lt;field::complex::Mersenne31Complex as field::field::Field&gt;::mul_assign (5,190 samples, 0.43%)</title><rect x="2.7817%" y="149" width="0.4337%" height="15" fill="rgb(233,223,10)" fg:x="33287" fg:w="5190"/><text x="3.0317%" y="159.50"></text></g><g><title>field::complex::Mersenne31Complex::mul_assign_impl (5,190 samples, 0.43%)</title><rect x="2.7817%" y="133" width="0.4337%" height="15" fill="rgb(215,21,27)" fg:x="33287" fg:w="5190"/><text x="3.0317%" y="143.50"></text></g><g><title>field::base::Mersenne31Field::sub_assign_impl (837 samples, 0.07%)</title><rect x="3.1454%" y="117" width="0.0699%" height="15" fill="rgb(232,23,21)" fg:x="37640" fg:w="837"/><text x="3.3954%" y="127.50"></text></g><g><title>field::ops::sub_mod (837 samples, 0.07%)</title><rect x="3.1454%" y="101" width="0.0699%" height="15" fill="rgb(244,5,23)" fg:x="37640" fg:w="837"/><text x="3.3954%" y="111.50"></text></g><g><title>field::ops::sub_mod_rt_riscv (837 samples, 0.07%)</title><rect x="3.1454%" y="85" width="0.0699%" height="15" fill="rgb(226,81,46)" fg:x="37640" fg:w="837"/><text x="3.3954%" y="95.50"></text></g><g><title>&lt;field::quartic::Mersenne31Quartic as field::field::Field&gt;::mul_assign (9,096 samples, 0.76%)</title><rect x="2.5485%" y="165" width="0.7601%" height="15" fill="rgb(247,70,30)" fg:x="30497" fg:w="9096"/><text x="2.7985%" y="175.50"></text></g><g><title>&lt;field::complex::Mersenne31Complex as field::field::Field&gt;::sub_assign (1,116 samples, 0.09%)</title><rect x="3.2154%" y="149" width="0.0933%" height="15" fill="rgb(212,68,19)" fg:x="38477" fg:w="1116"/><text x="3.4654%" y="159.50"></text></g><g><title>field::complex::Mersenne31Complex::sub_assign_impl (1,116 samples, 0.09%)</title><rect x="3.2154%" y="133" width="0.0933%" height="15" fill="rgb(240,187,13)" fg:x="38477" fg:w="1116"/><text x="3.4654%" y="143.50"></text></g><g><title>field::base::Mersenne31Field::sub_assign_impl (1,116 samples, 0.09%)</title><rect x="3.2154%" y="117" width="0.0933%" height="15" fill="rgb(223,113,26)" fg:x="38477" fg:w="1116"/><text x="3.4654%" y="127.50"></text></g><g><title>field::ops::sub_mod (1,116 samples, 0.09%)</title><rect x="3.2154%" y="101" width="0.0933%" height="15" fill="rgb(206,192,2)" fg:x="38477" fg:w="1116"/><text x="3.4654%" y="111.50"></text></g><g><title>field::ops::sub_mod_rt_riscv (1,116 samples, 0.09%)</title><rect x="3.2154%" y="85" width="0.0933%" height="15" fill="rgb(241,108,4)" fg:x="38477" fg:w="1116"/><text x="3.4654%" y="95.50"></text></g><g><title>field::batch_inverse_checked (19,794 samples, 1.65%)</title><rect x="1.6681%" y="181" width="1.6541%" height="15" fill="rgb(247,173,49)" fg:x="19961" fg:w="19794"/><text x="1.9181%" y="191.50"></text></g><g><title>&lt;field::complex::Mersenne31Complex as field::field::BaseField&gt;::mul_by_non_residue (160 samples, 0.01%)</title><rect x="3.3222%" y="149" width="0.0134%" height="15" fill="rgb(224,114,35)" fg:x="39755" fg:w="160"/><text x="3.5722%" y="159.50"></text></g><g><title>field::base::Mersenne31Field::mul_assign_impl (160 samples, 0.01%)</title><rect x="3.3489%" y="117" width="0.0134%" height="15" fill="rgb(245,159,27)" fg:x="40075" fg:w="160"/><text x="3.5989%" y="127.50"></text></g><g><title>field::ops::mul_mod (160 samples, 0.01%)</title><rect x="3.3489%" y="101" width="0.0134%" height="15" fill="rgb(245,172,44)" fg:x="40075" fg:w="160"/><text x="3.5989%" y="111.50"></text></g><g><title>field::ops::mul_mod_rt_riscv (160 samples, 0.01%)</title><rect x="3.3489%" y="85" width="0.0134%" height="15" fill="rgb(236,23,11)" fg:x="40075" fg:w="160"/><text x="3.5989%" y="95.50"></text></g><g><title>&lt;field::complex::Mersenne31Complex as field::field::Field&gt;::mul_assign (240 samples, 0.02%)</title><rect x="3.3456%" y="149" width="0.0201%" height="15" fill="rgb(205,117,38)" fg:x="40035" fg:w="240"/><text x="3.5956%" y="159.50"></text></g><g><title>field::complex::Mersenne31Complex::mul_assign_impl (240 samples, 0.02%)</title><rect x="3.3456%" y="133" width="0.0201%" height="15" fill="rgb(237,72,25)" fg:x="40035" fg:w="240"/><text x="3.5956%" y="143.50"></text></g><g><title>&lt;field::quartic::Mersenne31Quartic as field::field::Field&gt;::square (600 samples, 0.05%)</title><rect x="3.3222%" y="165" width="0.0501%" height="15" fill="rgb(244,70,9)" fg:x="39755" fg:w="600"/><text x="3.5722%" y="175.50"></text></g><g><title>field::field::Field::exp_power_of_2 (640 samples, 0.05%)</title><rect x="3.3222%" y="181" width="0.0535%" height="15" fill="rgb(217,125,39)" fg:x="39755" fg:w="640"/><text x="3.5722%" y="191.50"></text></g><g><title>field::base::Mersenne31Field::add_assign_impl (1,058 samples, 0.09%)</title><rect x="3.8023%" y="133" width="0.0884%" height="15" fill="rgb(235,36,10)" fg:x="45500" fg:w="1058"/><text x="4.0523%" y="143.50"></text></g><g><title>field::ops::add_mod (1,058 samples, 0.09%)</title><rect x="3.8023%" y="117" width="0.0884%" height="15" fill="rgb(251,123,47)" fg:x="45500" fg:w="1058"/><text x="4.0523%" y="127.50"></text></g><g><title>field::ops::add_mod_rt_riscv (1,058 samples, 0.09%)</title><rect x="3.8023%" y="101" width="0.0884%" height="15" fill="rgb(221,13,13)" fg:x="45500" fg:w="1058"/><text x="4.0523%" y="111.50"></text></g><g><title>field::base::Mersenne31Field::mul_assign_impl (2,116 samples, 0.18%)</title><rect x="3.8907%" y="133" width="0.1768%" height="15" fill="rgb(238,131,9)" fg:x="46558" fg:w="2116"/><text x="4.1407%" y="143.50"></text></g><g><title>field::ops::mul_mod (2,116 samples, 0.18%)</title><rect x="3.8907%" y="117" width="0.1768%" height="15" fill="rgb(211,50,8)" fg:x="46558" fg:w="2116"/><text x="4.1407%" y="127.50"></text></g><g><title>field::ops::mul_mod_rt_riscv (2,116 samples, 0.18%)</title><rect x="3.8907%" y="101" width="0.1768%" height="15" fill="rgb(245,182,24)" fg:x="46558" fg:w="2116"/><text x="4.1407%" y="111.50"></text></g><g><title>&lt;field::complex::Mersenne31Complex as field::field::Field&gt;::mul_assign (3,703 samples, 0.31%)</title><rect x="3.8023%" y="165" width="0.3094%" height="15" fill="rgb(242,14,37)" fg:x="45500" fg:w="3703"/><text x="4.0523%" y="175.50"></text></g><g><title>field::complex::Mersenne31Complex::mul_assign_impl (3,703 samples, 0.31%)</title><rect x="3.8023%" y="149" width="0.3094%" height="15" fill="rgb(246,228,12)" fg:x="45500" fg:w="3703"/><text x="4.0523%" y="159.50"></text></g><g><title>field::base::Mersenne31Field::sub_assign_impl (529 samples, 0.04%)</title><rect x="4.0675%" y="133" width="0.0442%" height="15" fill="rgb(213,55,15)" fg:x="48674" fg:w="529"/><text x="4.3175%" y="143.50"></text></g><g><title>field::ops::sub_mod (529 samples, 0.04%)</title><rect x="4.0675%" y="117" width="0.0442%" height="15" fill="rgb(209,9,3)" fg:x="48674" fg:w="529"/><text x="4.3175%" y="127.50"></text></g><g><title>field::ops::sub_mod_rt_riscv (529 samples, 0.04%)</title><rect x="4.0675%" y="101" width="0.0442%" height="15" fill="rgb(230,59,30)" fg:x="48674" fg:w="529"/><text x="4.3175%" y="111.50"></text></g><g><title>field::base::Mersenne31Field::double_impl (998 samples, 0.08%)</title><rect x="4.1117%" y="133" width="0.0834%" height="15" fill="rgb(209,121,21)" fg:x="49203" fg:w="998"/><text x="4.3617%" y="143.50"></text></g><g><title>field::base::Mersenne31Field::add_assign_impl (998 samples, 0.08%)</title><rect x="4.1117%" y="117" width="0.0834%" height="15" fill="rgb(220,109,13)" fg:x="49203" fg:w="998"/><text x="4.3617%" y="127.50"></text></g><g><title>field::ops::add_mod (998 samples, 0.08%)</title><rect x="4.1117%" y="101" width="0.0834%" height="15" fill="rgb(232,18,1)" fg:x="49203" fg:w="998"/><text x="4.3617%" y="111.50"></text></g><g><title>field::ops::add_mod_rt_riscv (998 samples, 0.08%)</title><rect x="4.1117%" y="85" width="0.0834%" height="15" fill="rgb(215,41,42)" fg:x="49203" fg:w="998"/><text x="4.3617%" y="95.50"></text></g><g><title>field::base::Mersenne31Field::mul_assign_impl (2,994 samples, 0.25%)</title><rect x="4.1951%" y="133" width="0.2502%" height="15" fill="rgb(224,123,36)" fg:x="50201" fg:w="2994"/><text x="4.4451%" y="143.50"></text></g><g><title>field::ops::mul_mod (2,994 samples, 0.25%)</title><rect x="4.1951%" y="117" width="0.2502%" height="15" fill="rgb(240,125,3)" fg:x="50201" fg:w="2994"/><text x="4.4451%" y="127.50"></text></g><g><title>field::ops::mul_mod_rt_riscv (2,994 samples, 0.25%)</title><rect x="4.1951%" y="101" width="0.2502%" height="15" fill="rgb(205,98,50)" fg:x="50201" fg:w="2994"/><text x="4.4451%" y="111.50"></text></g><g><title>field::field::Field::pow (13,798 samples, 1.15%)</title><rect x="3.3757%" y="181" width="1.1530%" height="15" fill="rgb(205,185,37)" fg:x="40395" fg:w="13798"/><text x="3.6257%" y="191.50"></text></g><g><title>&lt;field::complex::Mersenne31Complex as field::field::Field&gt;::square (4,990 samples, 0.42%)</title><rect x="4.1117%" y="165" width="0.4170%" height="15" fill="rgb(238,207,15)" fg:x="49203" fg:w="4990"/><text x="4.3617%" y="175.50"></text></g><g><title>field::complex::Mersenne31Complex::square_impl (4,990 samples, 0.42%)</title><rect x="4.1117%" y="149" width="0.4170%" height="15" fill="rgb(213,199,42)" fg:x="49203" fg:w="4990"/><text x="4.3617%" y="159.50"></text></g><g><title>field::base::Mersenne31Field::sub_assign_impl (998 samples, 0.08%)</title><rect x="4.4453%" y="133" width="0.0834%" height="15" fill="rgb(235,201,11)" fg:x="53195" fg:w="998"/><text x="4.6953%" y="143.50"></text></g><g><title>field::ops::sub_mod (998 samples, 0.08%)</title><rect x="4.4453%" y="117" width="0.0834%" height="15" fill="rgb(207,46,11)" fg:x="53195" fg:w="998"/><text x="4.6953%" y="127.50"></text></g><g><title>field::ops::sub_mod_rt_riscv (998 samples, 0.08%)</title><rect x="4.4453%" y="101" width="0.0834%" height="15" fill="rgb(241,35,35)" fg:x="53195" fg:w="998"/><text x="4.6953%" y="111.50"></text></g><g><title>compiler_builtins::mem::impls::copy_forward::copy_forward_aligned_words (10,570 samples, 0.88%)</title><rect x="4.5391%" y="133" width="0.8833%" height="15" fill="rgb(243,32,47)" fg:x="54318" fg:w="10570"/><text x="4.7891%" y="143.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::wrapping_add (4,224 samples, 0.35%)</title><rect x="5.0695%" y="117" width="0.3530%" height="15" fill="rgb(247,202,23)" fg:x="60664" fg:w="4224"/><text x="5.3195%" y="127.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::wrapping_offset (4,224 samples, 0.35%)</title><rect x="5.0695%" y="101" width="0.3530%" height="15" fill="rgb(219,102,11)" fg:x="60664" fg:w="4224"/><text x="5.3195%" y="111.50"></text></g><g><title>memcpy (10,660 samples, 0.89%)</title><rect x="4.5354%" y="181" width="0.8908%" height="15" fill="rgb(243,110,44)" fg:x="54273" fg:w="10660"/><text x="4.7854%" y="191.50"></text></g><g><title>compiler_builtins::mem::memcpy (10,650 samples, 0.89%)</title><rect x="4.5362%" y="165" width="0.8900%" height="15" fill="rgb(222,74,54)" fg:x="54283" fg:w="10650"/><text x="4.7862%" y="175.50"></text></g><g><title>compiler_builtins::mem::impls::copy_forward (10,650 samples, 0.89%)</title><rect x="4.5362%" y="149" width="0.8900%" height="15" fill="rgb(216,99,12)" fg:x="54283" fg:w="10650"/><text x="4.7862%" y="159.50"></text></g><g><title>memset (123 samples, 0.01%)</title><rect x="5.4262%" y="181" width="0.0103%" height="15" fill="rgb(226,22,26)" fg:x="64933" fg:w="123"/><text x="5.6762%" y="191.50"></text></g><g><title>compiler_builtins::mem::memset (120 samples, 0.01%)</title><rect x="5.4264%" y="165" width="0.0100%" height="15" fill="rgb(217,163,10)" fg:x="64936" fg:w="120"/><text x="5.6764%" y="175.50"></text></g><g><title>compiler_builtins::mem::impls::set_bytes (120 samples, 0.01%)</title><rect x="5.4264%" y="149" width="0.0100%" height="15" fill="rgb(213,25,53)" fg:x="64936" fg:w="120"/><text x="5.6764%" y="159.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (3,126 samples, 0.26%)</title><rect x="5.9159%" y="133" width="0.2612%" height="15" fill="rgb(252,105,26)" fg:x="70793" fg:w="3126"/><text x="6.1659%" y="143.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::read (3,126 samples, 0.26%)</title><rect x="6.1771%" y="133" width="0.2612%" height="15" fill="rgb(220,39,43)" fg:x="73919" fg:w="3126"/><text x="6.4271%" y="143.50"></text></g><g><title>core::ptr::read (3,126 samples, 0.26%)</title><rect x="6.1771%" y="117" width="0.2612%" height="15" fill="rgb(229,68,48)" fg:x="73919" fg:w="3126"/><text x="6.4271%" y="127.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (3,714 samples, 0.31%)</title><rect x="6.4383%" y="133" width="0.3104%" height="15" fill="rgb(252,8,32)" fg:x="77045" fg:w="3714"/><text x="6.6883%" y="143.50"></text></g><g><title>blake2s_u32::spec_memcopy_u32_nonoverlapping (16,806 samples, 1.40%)</title><rect x="5.6055%" y="149" width="1.4044%" height="15" fill="rgb(223,20,43)" fg:x="67079" fg:w="16806"/><text x="5.8555%" y="159.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write_volatile (3,126 samples, 0.26%)</title><rect x="6.7487%" y="133" width="0.2612%" height="15" fill="rgb(229,81,49)" fg:x="80759" fg:w="3126"/><text x="6.9987%" y="143.50"></text></g><g><title>core::ptr::write_volatile (3,126 samples, 0.26%)</title><rect x="6.7487%" y="117" width="0.2612%" height="15" fill="rgb(236,28,36)" fg:x="80759" fg:w="3126"/><text x="6.9987%" y="127.50"></text></g><g><title>blake2s_u32::spec_memzero_u32 (246 samples, 0.02%)</title><rect x="7.0099%" y="149" width="0.0206%" height="15" fill="rgb(249,185,26)" fg:x="83885" fg:w="246"/><text x="7.2599%" y="159.50"></text></g><g><title>blake2s_u32::state_with_extended_control::Blake2RoundFunctionEvaluator::run_round_function (5,655 samples, 0.47%)</title><rect x="7.0305%" y="149" width="0.4726%" height="15" fill="rgb(249,174,33)" fg:x="84131" fg:w="5655"/><text x="7.2805%" y="159.50"></text></g><g><title>blake2s_u32::state_with_extended_control::Blake2RoundFunctionEvaluator::run_round_function_with_byte_len (5,655 samples, 0.47%)</title><rect x="7.0305%" y="133" width="0.4726%" height="15" fill="rgb(233,201,37)" fg:x="84131" fg:w="5655"/><text x="7.2805%" y="143.50"></text></g><g><title>blake2s_u32::state_with_extended_control::csr_trigger_delegation (4,485 samples, 0.37%)</title><rect x="7.1283%" y="117" width="0.3748%" height="15" fill="rgb(221,78,26)" fg:x="85301" fg:w="4485"/><text x="7.3783%" y="127.50"></text></g><g><title>core::cmp::min (196 samples, 0.02%)</title><rect x="7.5031%" y="149" width="0.0164%" height="15" fill="rgb(250,127,30)" fg:x="89786" fg:w="196"/><text x="7.7531%" y="159.50"></text></g><g><title>core::cmp::Ord::min (196 samples, 0.02%)</title><rect x="7.5031%" y="133" width="0.0164%" height="15" fill="rgb(230,49,44)" fg:x="89786" fg:w="196"/><text x="7.7531%" y="143.50"></text></g><g><title>core::cmp::min_by (196 samples, 0.02%)</title><rect x="7.5031%" y="117" width="0.0164%" height="15" fill="rgb(229,67,23)" fg:x="89786" fg:w="196"/><text x="7.7531%" y="127.50"></text></g><g><title>transcript::Blake2sTranscript::commit_inner (25,071 samples, 2.10%)</title><rect x="5.4407%" y="165" width="2.0951%" height="15" fill="rgb(249,83,47)" fg:x="65107" fg:w="25071"/><text x="5.6907%" y="175.50">t..</text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (196 samples, 0.02%)</title><rect x="7.5194%" y="149" width="0.0164%" height="15" fill="rgb(215,43,3)" fg:x="89982" fg:w="196"/><text x="7.7694%" y="159.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (196 samples, 0.02%)</title><rect x="7.5194%" y="133" width="0.0164%" height="15" fill="rgb(238,154,13)" fg:x="89982" fg:w="196"/><text x="7.7694%" y="143.50"></text></g><g><title>transcript::Blake2sTranscript::commit_initial_using_hasher (25,154 samples, 2.10%)</title><rect x="5.4365%" y="181" width="2.1020%" height="15" fill="rgb(219,56,2)" fg:x="65056" fg:w="25154"/><text x="5.6865%" y="191.50">t..</text></g><g><title>transcript::Blake2sTranscript::commit_inner (475 samples, 0.04%)</title><rect x="7.5385%" y="181" width="0.0397%" height="15" fill="rgb(233,0,4)" fg:x="90210" fg:w="475"/><text x="7.7885%" y="191.50"></text></g><g><title>blake2s_u32::state_with_extended_control::Blake2RoundFunctionEvaluator::reset (207 samples, 0.02%)</title><rect x="7.6015%" y="165" width="0.0173%" height="15" fill="rgb(235,30,7)" fg:x="90964" fg:w="207"/><text x="7.8515%" y="175.50"></text></g><g><title>blake2s_u32::spec_memcopy_u32_nonoverlapping (198 samples, 0.02%)</title><rect x="7.6023%" y="149" width="0.0165%" height="15" fill="rgb(250,79,13)" fg:x="90973" fg:w="198"/><text x="7.8523%" y="159.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write_volatile (198 samples, 0.02%)</title><rect x="7.6023%" y="133" width="0.0165%" height="15" fill="rgb(211,146,34)" fg:x="90973" fg:w="198"/><text x="7.8523%" y="143.50"></text></g><g><title>core::ptr::write_volatile (198 samples, 0.02%)</title><rect x="7.6023%" y="117" width="0.0165%" height="15" fill="rgb(228,22,38)" fg:x="90973" fg:w="198"/><text x="7.8523%" y="127.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (9,924 samples, 0.83%)</title><rect x="9.1539%" y="133" width="0.8293%" height="15" fill="rgb(235,168,5)" fg:x="109541" fg:w="9924"/><text x="9.4039%" y="143.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::read (9,924 samples, 0.83%)</title><rect x="9.9832%" y="133" width="0.8293%" height="15" fill="rgb(221,155,16)" fg:x="119465" fg:w="9924"/><text x="10.2332%" y="143.50"></text></g><g><title>core::ptr::read (9,924 samples, 0.83%)</title><rect x="9.9832%" y="117" width="0.8293%" height="15" fill="rgb(215,215,53)" fg:x="119465" fg:w="9924"/><text x="10.2332%" y="127.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (11,823 samples, 0.99%)</title><rect x="10.8125%" y="133" width="0.9880%" height="15" fill="rgb(223,4,10)" fg:x="129389" fg:w="11823"/><text x="11.0625%" y="143.50"></text></g><g><title>blake2s_u32::spec_memcopy_u32_nonoverlapping (53,418 samples, 4.46%)</title><rect x="8.1659%" y="149" width="4.4639%" height="15" fill="rgb(234,103,6)" fg:x="97718" fg:w="53418"/><text x="8.4159%" y="159.50">blake..</text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write_volatile (9,924 samples, 0.83%)</title><rect x="11.8005%" y="133" width="0.8293%" height="15" fill="rgb(227,97,0)" fg:x="141212" fg:w="9924"/><text x="12.0505%" y="143.50"></text></g><g><title>core::ptr::write_volatile (9,924 samples, 0.83%)</title><rect x="11.8005%" y="117" width="0.8293%" height="15" fill="rgb(234,150,53)" fg:x="141212" fg:w="9924"/><text x="12.0505%" y="127.50"></text></g><g><title>blake2s_u32::spec_memzero_u32 (1,293 samples, 0.11%)</title><rect x="12.6298%" y="149" width="0.1081%" height="15" fill="rgb(228,201,54)" fg:x="151136" fg:w="1293"/><text x="12.8798%" y="159.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write_volatile (264 samples, 0.02%)</title><rect x="12.7158%" y="133" width="0.0221%" height="15" fill="rgb(222,22,37)" fg:x="152165" fg:w="264"/><text x="12.9658%" y="143.50"></text></g><g><title>core::ptr::write_volatile (264 samples, 0.02%)</title><rect x="12.7158%" y="117" width="0.0221%" height="15" fill="rgb(237,53,32)" fg:x="152165" fg:w="264"/><text x="12.9658%" y="127.50"></text></g><g><title>blake2s_u32::state_with_extended_control::Blake2RoundFunctionEvaluator::run_round_function (17,835 samples, 1.49%)</title><rect x="12.7379%" y="149" width="1.4904%" height="15" fill="rgb(233,25,53)" fg:x="152429" fg:w="17835"/><text x="12.9879%" y="159.50"></text></g><g><title>blake2s_u32::state_with_extended_control::Blake2RoundFunctionEvaluator::run_round_function_with_byte_len (17,835 samples, 1.49%)</title><rect x="12.7379%" y="133" width="1.4904%" height="15" fill="rgb(210,40,34)" fg:x="152429" fg:w="17835"/><text x="12.9879%" y="143.50"></text></g><g><title>blake2s_u32::state_with_extended_control::csr_trigger_delegation (14,145 samples, 1.18%)</title><rect x="13.0463%" y="117" width="1.1820%" height="15" fill="rgb(241,220,44)" fg:x="156119" fg:w="14145"/><text x="13.2963%" y="127.50"></text></g><g><title>core::cmp::min (633 samples, 0.05%)</title><rect x="14.2283%" y="149" width="0.0529%" height="15" fill="rgb(235,28,35)" fg:x="170264" fg:w="633"/><text x="14.4783%" y="159.50"></text></g><g><title>core::cmp::Ord::min (633 samples, 0.05%)</title><rect x="14.2283%" y="133" width="0.0529%" height="15" fill="rgb(210,56,17)" fg:x="170264" fg:w="633"/><text x="14.4783%" y="143.50"></text></g><g><title>core::cmp::min_by (633 samples, 0.05%)</title><rect x="14.2283%" y="117" width="0.0529%" height="15" fill="rgb(224,130,29)" fg:x="170264" fg:w="633"/><text x="14.4783%" y="127.50"></text></g><g><title>transcript::Blake2sTranscript::commit_inner (80,359 samples, 6.72%)</title><rect x="7.6188%" y="165" width="6.7153%" height="15" fill="rgb(235,212,8)" fg:x="91171" fg:w="80359"/><text x="7.8688%" y="175.50">transcrip..</text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (633 samples, 0.05%)</title><rect x="14.2812%" y="149" width="0.0529%" height="15" fill="rgb(223,33,50)" fg:x="170897" fg:w="633"/><text x="14.5312%" y="159.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (633 samples, 0.05%)</title><rect x="14.2812%" y="133" width="0.0529%" height="15" fill="rgb(219,149,13)" fg:x="170897" fg:w="633"/><text x="14.5312%" y="143.50"></text></g><g><title>transcript::Blake2sTranscript::commit_with_seed_using_hasher (81,133 samples, 6.78%)</title><rect x="7.5782%" y="181" width="6.7800%" height="15" fill="rgb(250,156,29)" fg:x="90685" fg:w="81133"/><text x="7.8282%" y="191.50">transcrip..</text></g><g><title>transcript::Blake2sTranscript::flush (288 samples, 0.02%)</title><rect x="14.3341%" y="165" width="0.0241%" height="15" fill="rgb(216,193,19)" fg:x="171530" fg:w="288"/><text x="14.5841%" y="175.50"></text></g><g><title>blake2s_u32::state_with_extended_control::Blake2RoundFunctionEvaluator::run_round_function (288 samples, 0.02%)</title><rect x="14.3341%" y="149" width="0.0241%" height="15" fill="rgb(216,135,14)" fg:x="171530" fg:w="288"/><text x="14.5841%" y="159.50"></text></g><g><title>blake2s_u32::state_with_extended_control::Blake2RoundFunctionEvaluator::run_round_function_with_byte_len (279 samples, 0.02%)</title><rect x="14.3348%" y="133" width="0.0233%" height="15" fill="rgb(241,47,5)" fg:x="171539" fg:w="279"/><text x="14.5848%" y="143.50"></text></g><g><title>blake2s_u32::state_with_extended_control::csr_trigger_delegation (198 samples, 0.02%)</title><rect x="14.3416%" y="117" width="0.0165%" height="15" fill="rgb(233,42,35)" fg:x="171620" fg:w="198"/><text x="14.5916%" y="127.50"></text></g><g><title>blake2s_u32::spec_memcopy_u32_nonoverlapping (202 samples, 0.02%)</title><rect x="14.3585%" y="165" width="0.0169%" height="15" fill="rgb(231,13,6)" fg:x="171822" fg:w="202"/><text x="14.6085%" y="175.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write_volatile (120 samples, 0.01%)</title><rect x="14.3653%" y="149" width="0.0100%" height="15" fill="rgb(207,181,40)" fg:x="171904" fg:w="120"/><text x="14.6153%" y="159.50"></text></g><g><title>core::ptr::write_volatile (120 samples, 0.01%)</title><rect x="14.3653%" y="133" width="0.0100%" height="15" fill="rgb(254,173,49)" fg:x="171904" fg:w="120"/><text x="14.6153%" y="143.50"></text></g><g><title>transcript::Blake2sTranscript::draw_randomness_using_hasher (590 samples, 0.05%)</title><rect x="14.3582%" y="181" width="0.0493%" height="15" fill="rgb(221,1,38)" fg:x="171818" fg:w="590"/><text x="14.6082%" y="191.50"></text></g><g><title>transcript::Blake2sTranscript::draw_randomness_inner (320 samples, 0.03%)</title><rect x="14.3807%" y="165" width="0.0267%" height="15" fill="rgb(206,124,46)" fg:x="172088" fg:w="320"/><text x="14.6307%" y="175.50"></text></g><g><title>blake2s_u32::state_with_extended_control::Blake2RoundFunctionEvaluator::run_round_function (120 samples, 0.01%)</title><rect x="14.3974%" y="149" width="0.0100%" height="15" fill="rgb(249,21,11)" fg:x="172288" fg:w="120"/><text x="14.6474%" y="159.50"></text></g><g><title>blake2s_u32::state_with_extended_control::Blake2RoundFunctionEvaluator::run_round_function_with_byte_len (120 samples, 0.01%)</title><rect x="14.3974%" y="133" width="0.0100%" height="15" fill="rgb(222,201,40)" fg:x="172288" fg:w="120"/><text x="14.6474%" y="143.50"></text></g><g><title>transcript::Blake2sTranscript::verify_pow_using_hasher (120 samples, 0.01%)</title><rect x="14.4075%" y="181" width="0.0100%" height="15" fill="rgb(235,61,29)" fg:x="172408" fg:w="120"/><text x="14.6575%" y="191.50"></text></g><g><title>field::base::Mersenne31Field::mul_assign_impl (187 samples, 0.02%)</title><rect x="14.4466%" y="117" width="0.0156%" height="15" fill="rgb(219,207,3)" fg:x="172876" fg:w="187"/><text x="14.6966%" y="127.50"></text></g><g><title>field::ops::mul_mod (182 samples, 0.02%)</title><rect x="14.4470%" y="101" width="0.0152%" height="15" fill="rgb(222,56,46)" fg:x="172881" fg:w="182"/><text x="14.6970%" y="111.50"></text></g><g><title>field::ops::mul_mod_rt_riscv (182 samples, 0.02%)</title><rect x="14.4470%" y="85" width="0.0152%" height="15" fill="rgb(239,76,54)" fg:x="172881" fg:w="182"/><text x="14.6970%" y="95.50"></text></g><g><title>&lt;field::complex::Mersenne31Complex as field::field::Field&gt;::mul_assign (277 samples, 0.02%)</title><rect x="14.4428%" y="149" width="0.0231%" height="15" fill="rgb(231,124,27)" fg:x="172831" fg:w="277"/><text x="14.6928%" y="159.50"></text></g><g><title>field::complex::Mersenne31Complex::mul_assign_impl (277 samples, 0.02%)</title><rect x="14.4428%" y="133" width="0.0231%" height="15" fill="rgb(249,195,6)" fg:x="172831" fg:w="277"/><text x="14.6928%" y="143.50"></text></g><g><title>&lt;field::quartic::Mersenne31Quartic as field::field::Field&gt;::mul_assign (496 samples, 0.04%)</title><rect x="14.4296%" y="165" width="0.0414%" height="15" fill="rgb(237,174,47)" fg:x="172673" fg:w="496"/><text x="14.6796%" y="175.50"></text></g><g><title>&lt;field::complex::Mersenne31Complex as field::field::BaseField&gt;::mul_by_non_residue (140 samples, 0.01%)</title><rect x="14.7011%" y="117" width="0.0117%" height="15" fill="rgb(206,201,31)" fg:x="175922" fg:w="140"/><text x="14.9511%" y="127.50"></text></g><g><title>&lt;field::complex::Mersenne31Complex as field::field::Field&gt;::add_assign (211 samples, 0.02%)</title><rect x="14.7128%" y="117" width="0.0176%" height="15" fill="rgb(231,57,52)" fg:x="176062" fg:w="211"/><text x="14.9628%" y="127.50"></text></g><g><title>field::complex::Mersenne31Complex::add_assign_impl (211 samples, 0.02%)</title><rect x="14.7128%" y="101" width="0.0176%" height="15" fill="rgb(248,177,22)" fg:x="176062" fg:w="211"/><text x="14.9628%" y="111.50"></text></g><g><title>field::base::Mersenne31Field::add_assign_impl (211 samples, 0.02%)</title><rect x="14.7128%" y="85" width="0.0176%" height="15" fill="rgb(215,211,37)" fg:x="176062" fg:w="211"/><text x="14.9628%" y="95.50"></text></g><g><title>field::ops::add_mod (211 samples, 0.02%)</title><rect x="14.7128%" y="69" width="0.0176%" height="15" fill="rgb(241,128,51)" fg:x="176062" fg:w="211"/><text x="14.9628%" y="79.50"></text></g><g><title>field::ops::add_mod_rt_riscv (211 samples, 0.02%)</title><rect x="14.7128%" y="53" width="0.0176%" height="15" fill="rgb(227,165,31)" fg:x="176062" fg:w="211"/><text x="14.9628%" y="63.50"></text></g><g><title>field::base::Mersenne31Field::add_assign_impl (181 samples, 0.02%)</title><rect x="14.7304%" y="85" width="0.0151%" height="15" fill="rgb(228,167,24)" fg:x="176273" fg:w="181"/><text x="14.9804%" y="95.50"></text></g><g><title>field::ops::add_mod (181 samples, 0.02%)</title><rect x="14.7304%" y="69" width="0.0151%" height="15" fill="rgb(228,143,12)" fg:x="176273" fg:w="181"/><text x="14.9804%" y="79.50"></text></g><g><title>field::ops::add_mod_rt_riscv (181 samples, 0.02%)</title><rect x="14.7304%" y="53" width="0.0151%" height="15" fill="rgb(249,149,8)" fg:x="176273" fg:w="181"/><text x="14.9804%" y="63.50"></text></g><g><title>field::base::Mersenne31Field::mul_assign_impl (709 samples, 0.06%)</title><rect x="14.7456%" y="85" width="0.0592%" height="15" fill="rgb(243,35,44)" fg:x="176454" fg:w="709"/><text x="14.9956%" y="95.50"></text></g><g><title>field::ops::mul_mod (709 samples, 0.06%)</title><rect x="14.7456%" y="69" width="0.0592%" height="15" fill="rgb(246,89,9)" fg:x="176454" fg:w="709"/><text x="14.9956%" y="79.50"></text></g><g><title>field::ops::mul_mod_rt_riscv (709 samples, 0.06%)</title><rect x="14.7456%" y="53" width="0.0592%" height="15" fill="rgb(233,213,13)" fg:x="176454" fg:w="709"/><text x="14.9956%" y="63.50"></text></g><g><title>&lt;field::complex::Mersenne31Complex as field::field::Field&gt;::mul_assign (995 samples, 0.08%)</title><rect x="14.7304%" y="117" width="0.0831%" height="15" fill="rgb(233,141,41)" fg:x="176273" fg:w="995"/><text x="14.9804%" y="127.50"></text></g><g><title>field::complex::Mersenne31Complex::mul_assign_impl (995 samples, 0.08%)</title><rect x="14.7304%" y="101" width="0.0831%" height="15" fill="rgb(239,167,4)" fg:x="176273" fg:w="995"/><text x="14.9804%" y="111.50"></text></g><g><title>&lt;F as field::field::FieldExtension&lt;F&gt;&gt;::mul_assign_by_base (1,486 samples, 0.12%)</title><rect x="14.7011%" y="149" width="0.1242%" height="15" fill="rgb(209,217,16)" fg:x="175922" fg:w="1486"/><text x="14.9511%" y="159.50"></text></g><g><title>&lt;field::quartic::Mersenne31Quartic as field::field::Field&gt;::mul_assign (1,486 samples, 0.12%)</title><rect x="14.7011%" y="133" width="0.1242%" height="15" fill="rgb(219,88,35)" fg:x="175922" fg:w="1486"/><text x="14.9511%" y="143.50"></text></g><g><title>&lt;field::complex::Mersenne31Complex as field::field::Field&gt;::sub_assign (140 samples, 0.01%)</title><rect x="14.8136%" y="117" width="0.0117%" height="15" fill="rgb(220,193,23)" fg:x="177268" fg:w="140"/><text x="15.0636%" y="127.50"></text></g><g><title>field::complex::Mersenne31Complex::sub_assign_impl (140 samples, 0.01%)</title><rect x="14.8136%" y="101" width="0.0117%" height="15" fill="rgb(230,90,52)" fg:x="177268" fg:w="140"/><text x="15.0636%" y="111.50"></text></g><g><title>field::base::Mersenne31Field::sub_assign_impl (140 samples, 0.01%)</title><rect x="14.8136%" y="85" width="0.0117%" height="15" fill="rgb(252,106,19)" fg:x="177268" fg:w="140"/><text x="15.0636%" y="95.50"></text></g><g><title>field::ops::sub_mod (140 samples, 0.01%)</title><rect x="14.8136%" y="69" width="0.0117%" height="15" fill="rgb(206,74,20)" fg:x="177268" fg:w="140"/><text x="15.0636%" y="79.50"></text></g><g><title>field::ops::sub_mod_rt_riscv (140 samples, 0.01%)</title><rect x="14.8136%" y="53" width="0.0117%" height="15" fill="rgb(230,138,44)" fg:x="177268" fg:w="140"/><text x="15.0636%" y="63.50"></text></g><g><title>&lt;field::quartic::Mersenne31Quartic as field::field::Field&gt;::add_assign (5,723 samples, 0.48%)</title><rect x="14.8253%" y="149" width="0.4782%" height="15" fill="rgb(235,182,43)" fg:x="177408" fg:w="5723"/><text x="15.0753%" y="159.50"></text></g><g><title>&lt;field::complex::Mersenne31Complex as field::field::Field&gt;::add_assign (5,723 samples, 0.48%)</title><rect x="14.8253%" y="133" width="0.4782%" height="15" fill="rgb(242,16,51)" fg:x="177408" fg:w="5723"/><text x="15.0753%" y="143.50"></text></g><g><title>field::complex::Mersenne31Complex::add_assign_impl (5,723 samples, 0.48%)</title><rect x="14.8253%" y="117" width="0.4782%" height="15" fill="rgb(248,9,4)" fg:x="177408" fg:w="5723"/><text x="15.0753%" y="127.50"></text></g><g><title>field::base::Mersenne31Field::add_assign_impl (5,723 samples, 0.48%)</title><rect x="14.8253%" y="101" width="0.4782%" height="15" fill="rgb(210,31,22)" fg:x="177408" fg:w="5723"/><text x="15.0753%" y="111.50"></text></g><g><title>field::ops::add_mod (5,710 samples, 0.48%)</title><rect x="14.8264%" y="85" width="0.4772%" height="15" fill="rgb(239,54,39)" fg:x="177421" fg:w="5710"/><text x="15.0764%" y="95.50"></text></g><g><title>field::ops::add_mod_rt_riscv (5,710 samples, 0.48%)</title><rect x="14.8264%" y="69" width="0.4772%" height="15" fill="rgb(230,99,41)" fg:x="177421" fg:w="5710"/><text x="15.0764%" y="79.50"></text></g><g><title>&lt;field::base::Mersenne31Field as field::field::Field&gt;::add_assign (970 samples, 0.08%)</title><rect x="15.3035%" y="117" width="0.0811%" height="15" fill="rgb(253,106,12)" fg:x="183131" fg:w="970"/><text x="15.5535%" y="127.50"></text></g><g><title>field::base::Mersenne31Field::add_assign_impl (970 samples, 0.08%)</title><rect x="15.3035%" y="101" width="0.0811%" height="15" fill="rgb(213,46,41)" fg:x="183131" fg:w="970"/><text x="15.5535%" y="111.50"></text></g><g><title>field::ops::add_mod (970 samples, 0.08%)</title><rect x="15.3035%" y="85" width="0.0811%" height="15" fill="rgb(215,133,35)" fg:x="183131" fg:w="970"/><text x="15.5535%" y="95.50"></text></g><g><title>field::ops::add_mod_rt_riscv (970 samples, 0.08%)</title><rect x="15.3035%" y="69" width="0.0811%" height="15" fill="rgb(213,28,5)" fg:x="183131" fg:w="970"/><text x="15.5535%" y="79.50"></text></g><g><title>&lt;field::base::Mersenne31Field as field::field::Field&gt;::double (1,941 samples, 0.16%)</title><rect x="15.3846%" y="117" width="0.1622%" height="15" fill="rgb(215,77,49)" fg:x="184101" fg:w="1941"/><text x="15.6346%" y="127.50"></text></g><g><title>field::base::Mersenne31Field::double_impl (1,941 samples, 0.16%)</title><rect x="15.3846%" y="101" width="0.1622%" height="15" fill="rgb(248,100,22)" fg:x="184101" fg:w="1941"/><text x="15.6346%" y="111.50"></text></g><g><title>field::base::Mersenne31Field::add_assign_impl (1,941 samples, 0.16%)</title><rect x="15.3846%" y="85" width="0.1622%" height="15" fill="rgb(208,67,9)" fg:x="184101" fg:w="1941"/><text x="15.6346%" y="95.50"></text></g><g><title>field::ops::add_mod (1,941 samples, 0.16%)</title><rect x="15.3846%" y="69" width="0.1622%" height="15" fill="rgb(219,133,21)" fg:x="184101" fg:w="1941"/><text x="15.6346%" y="79.50"></text></g><g><title>field::ops::add_mod_rt_riscv (1,941 samples, 0.16%)</title><rect x="15.3846%" y="53" width="0.1622%" height="15" fill="rgb(246,46,29)" fg:x="184101" fg:w="1941"/><text x="15.6346%" y="63.50"></text></g><g><title>&lt;field::complex::Mersenne31Complex as field::field::BaseField&gt;::mul_by_non_residue (3,881 samples, 0.32%)</title><rect x="15.3035%" y="133" width="0.3243%" height="15" fill="rgb(246,185,52)" fg:x="183131" fg:w="3881"/><text x="15.5535%" y="143.50"></text></g><g><title>&lt;field::base::Mersenne31Field as field::field::Field&gt;::sub_assign (970 samples, 0.08%)</title><rect x="15.5468%" y="117" width="0.0811%" height="15" fill="rgb(252,136,11)" fg:x="186042" fg:w="970"/><text x="15.7968%" y="127.50"></text></g><g><title>field::base::Mersenne31Field::sub_assign_impl (970 samples, 0.08%)</title><rect x="15.5468%" y="101" width="0.0811%" height="15" fill="rgb(219,138,53)" fg:x="186042" fg:w="970"/><text x="15.7968%" y="111.50"></text></g><g><title>field::ops::sub_mod (970 samples, 0.08%)</title><rect x="15.5468%" y="85" width="0.0811%" height="15" fill="rgb(211,51,23)" fg:x="186042" fg:w="970"/><text x="15.7968%" y="95.50"></text></g><g><title>field::ops::sub_mod_rt_riscv (970 samples, 0.08%)</title><rect x="15.5468%" y="69" width="0.0811%" height="15" fill="rgb(247,221,28)" fg:x="186042" fg:w="970"/><text x="15.7968%" y="79.50"></text></g><g><title>&lt;field::complex::Mersenne31Complex as field::field::Field&gt;::add_assign (6,867 samples, 0.57%)</title><rect x="15.6279%" y="133" width="0.5738%" height="15" fill="rgb(251,222,45)" fg:x="187012" fg:w="6867"/><text x="15.8779%" y="143.50"></text></g><g><title>field::complex::Mersenne31Complex::add_assign_impl (6,867 samples, 0.57%)</title><rect x="15.6279%" y="117" width="0.5738%" height="15" fill="rgb(217,162,53)" fg:x="187012" fg:w="6867"/><text x="15.8779%" y="127.50"></text></g><g><title>field::base::Mersenne31Field::add_assign_impl (6,867 samples, 0.57%)</title><rect x="15.6279%" y="101" width="0.5738%" height="15" fill="rgb(229,93,14)" fg:x="187012" fg:w="6867"/><text x="15.8779%" y="111.50"></text></g><g><title>field::ops::add_mod (6,867 samples, 0.57%)</title><rect x="15.6279%" y="85" width="0.5738%" height="15" fill="rgb(209,67,49)" fg:x="187012" fg:w="6867"/><text x="15.8779%" y="95.50"></text></g><g><title>field::ops::add_mod_rt_riscv (6,867 samples, 0.57%)</title><rect x="15.6279%" y="69" width="0.5738%" height="15" fill="rgb(213,87,29)" fg:x="187012" fg:w="6867"/><text x="15.8779%" y="79.50"></text></g><g><title>field::base::Mersenne31Field::add_assign_impl (3,935 samples, 0.33%)</title><rect x="16.2017%" y="101" width="0.3288%" height="15" fill="rgb(205,151,52)" fg:x="193879" fg:w="3935"/><text x="16.4517%" y="111.50"></text></g><g><title>field::ops::add_mod (3,935 samples, 0.33%)</title><rect x="16.2017%" y="85" width="0.3288%" height="15" fill="rgb(253,215,39)" fg:x="193879" fg:w="3935"/><text x="16.4517%" y="95.50"></text></g><g><title>field::ops::add_mod_rt_riscv (3,935 samples, 0.33%)</title><rect x="16.2017%" y="69" width="0.3288%" height="15" fill="rgb(221,220,41)" fg:x="193879" fg:w="3935"/><text x="16.4517%" y="79.50"></text></g><g><title>field::base::Mersenne31Field::mul_assign_impl (16,060 samples, 1.34%)</title><rect x="16.5305%" y="101" width="1.3421%" height="15" fill="rgb(218,133,21)" fg:x="197814" fg:w="16060"/><text x="16.7805%" y="111.50"></text></g><g><title>field::ops::mul_mod (15,913 samples, 1.33%)</title><rect x="16.5428%" y="85" width="1.3298%" height="15" fill="rgb(221,193,43)" fg:x="197961" fg:w="15913"/><text x="16.7928%" y="95.50"></text></g><g><title>field::ops::mul_mod_rt_riscv (15,913 samples, 1.33%)</title><rect x="16.5428%" y="69" width="1.3298%" height="15" fill="rgb(240,128,52)" fg:x="197961" fg:w="15913"/><text x="16.7928%" y="79.50"></text></g><g><title>&lt;field::complex::Mersenne31Complex as field::field::Field&gt;::mul_assign (22,905 samples, 1.91%)</title><rect x="16.2017%" y="133" width="1.9141%" height="15" fill="rgb(253,114,12)" fg:x="193879" fg:w="22905"/><text x="16.4517%" y="143.50">&lt;..</text></g><g><title>field::complex::Mersenne31Complex::mul_assign_impl (22,905 samples, 1.91%)</title><rect x="16.2017%" y="117" width="1.9141%" height="15" fill="rgb(215,223,47)" fg:x="193879" fg:w="22905"/><text x="16.4517%" y="127.50">f..</text></g><g><title>field::base::Mersenne31Field::sub_assign_impl (2,910 samples, 0.24%)</title><rect x="17.8726%" y="101" width="0.2432%" height="15" fill="rgb(248,225,23)" fg:x="213874" fg:w="2910"/><text x="18.1226%" y="111.50"></text></g><g><title>field::ops::sub_mod (2,910 samples, 0.24%)</title><rect x="17.8726%" y="85" width="0.2432%" height="15" fill="rgb(250,108,0)" fg:x="213874" fg:w="2910"/><text x="18.1226%" y="95.50"></text></g><g><title>field::ops::sub_mod_rt_riscv (2,910 samples, 0.24%)</title><rect x="17.8726%" y="69" width="0.2432%" height="15" fill="rgb(228,208,7)" fg:x="213874" fg:w="2910"/><text x="18.1226%" y="79.50"></text></g><g><title>&lt;field::quartic::Mersenne31Quartic as field::field::Field&gt;::mul_assign (37,845 samples, 3.16%)</title><rect x="15.3035%" y="149" width="3.1626%" height="15" fill="rgb(244,45,10)" fg:x="183131" fg:w="37845"/><text x="15.5535%" y="159.50">&lt;fi..</text></g><g><title>&lt;field::complex::Mersenne31Complex as field::field::Field&gt;::sub_assign (4,192 samples, 0.35%)</title><rect x="18.1158%" y="133" width="0.3503%" height="15" fill="rgb(207,125,25)" fg:x="216784" fg:w="4192"/><text x="18.3658%" y="143.50"></text></g><g><title>field::complex::Mersenne31Complex::sub_assign_impl (4,192 samples, 0.35%)</title><rect x="18.1158%" y="117" width="0.3503%" height="15" fill="rgb(210,195,18)" fg:x="216784" fg:w="4192"/><text x="18.3658%" y="127.50"></text></g><g><title>field::base::Mersenne31Field::sub_assign_impl (4,192 samples, 0.35%)</title><rect x="18.1158%" y="101" width="0.3503%" height="15" fill="rgb(249,80,12)" fg:x="216784" fg:w="4192"/><text x="18.3658%" y="111.50"></text></g><g><title>field::ops::sub_mod (4,192 samples, 0.35%)</title><rect x="18.1158%" y="85" width="0.3503%" height="15" fill="rgb(221,65,9)" fg:x="216784" fg:w="4192"/><text x="18.3658%" y="95.50"></text></g><g><title>field::ops::sub_mod_rt_riscv (4,192 samples, 0.35%)</title><rect x="18.1158%" y="69" width="0.3503%" height="15" fill="rgb(235,49,36)" fg:x="216784" fg:w="4192"/><text x="18.3658%" y="79.50"></text></g><g><title>&lt;field::quartic::Mersenne31Quartic as field::field::Field&gt;::negate (220 samples, 0.02%)</title><rect x="18.4661%" y="149" width="0.0184%" height="15" fill="rgb(225,32,20)" fg:x="220976" fg:w="220"/><text x="18.7161%" y="159.50"></text></g><g><title>&lt;field::complex::Mersenne31Complex as field::field::Field&gt;::negate (220 samples, 0.02%)</title><rect x="18.4661%" y="133" width="0.0184%" height="15" fill="rgb(215,141,46)" fg:x="220976" fg:w="220"/><text x="18.7161%" y="143.50"></text></g><g><title>field::complex::Mersenne31Complex::negate_impl (220 samples, 0.02%)</title><rect x="18.4661%" y="117" width="0.0184%" height="15" fill="rgb(250,160,47)" fg:x="220976" fg:w="220"/><text x="18.7161%" y="127.50"></text></g><g><title>field::base::Mersenne31Field::negate_impl (220 samples, 0.02%)</title><rect x="18.4661%" y="101" width="0.0184%" height="15" fill="rgb(216,222,40)" fg:x="220976" fg:w="220"/><text x="18.7161%" y="111.50"></text></g><g><title>field::ops::sub_mod (220 samples, 0.02%)</title><rect x="18.4661%" y="85" width="0.0184%" height="15" fill="rgb(234,217,39)" fg:x="220976" fg:w="220"/><text x="18.7161%" y="95.50"></text></g><g><title>field::ops::sub_mod_rt_riscv (220 samples, 0.02%)</title><rect x="18.4661%" y="69" width="0.0184%" height="15" fill="rgb(207,178,40)" fg:x="220976" fg:w="220"/><text x="18.7161%" y="79.50"></text></g><g><title>&lt;field::quartic::Mersenne31Quartic as field::field::Field&gt;::sub_assign (1,100 samples, 0.09%)</title><rect x="18.4845%" y="149" width="0.0919%" height="15" fill="rgb(221,136,13)" fg:x="221196" fg:w="1100"/><text x="18.7345%" y="159.50"></text></g><g><title>&lt;field::complex::Mersenne31Complex as field::field::Field&gt;::sub_assign (1,100 samples, 0.09%)</title><rect x="18.4845%" y="133" width="0.0919%" height="15" fill="rgb(249,199,10)" fg:x="221196" fg:w="1100"/><text x="18.7345%" y="143.50"></text></g><g><title>field::complex::Mersenne31Complex::sub_assign_impl (1,100 samples, 0.09%)</title><rect x="18.4845%" y="117" width="0.0919%" height="15" fill="rgb(249,222,13)" fg:x="221196" fg:w="1100"/><text x="18.7345%" y="127.50"></text></g><g><title>field::base::Mersenne31Field::sub_assign_impl (1,100 samples, 0.09%)</title><rect x="18.4845%" y="101" width="0.0919%" height="15" fill="rgb(244,185,38)" fg:x="221196" fg:w="1100"/><text x="18.7345%" y="111.50"></text></g><g><title>field::ops::sub_mod (1,100 samples, 0.09%)</title><rect x="18.4845%" y="85" width="0.0919%" height="15" fill="rgb(236,202,9)" fg:x="221196" fg:w="1100"/><text x="18.7345%" y="95.50"></text></g><g><title>field::ops::sub_mod_rt_riscv (1,100 samples, 0.09%)</title><rect x="18.4845%" y="69" width="0.0919%" height="15" fill="rgb(250,229,37)" fg:x="221196" fg:w="1100"/><text x="18.7345%" y="79.50"></text></g><g><title>&lt;field::quartic::Mersenne31Quartic as field::field::FieldExtension&lt;field::base::Mersenne31Field&gt;&gt;::mul_assign_by_base (1,294 samples, 0.11%)</title><rect x="18.5802%" y="149" width="0.1081%" height="15" fill="rgb(206,174,23)" fg:x="222341" fg:w="1294"/><text x="18.8302%" y="159.50"></text></g><g><title>&lt;field::complex::Mersenne31Complex as field::field::FieldExtension&lt;field::base::Mersenne31Field&gt;&gt;::mul_assign_by_base (1,294 samples, 0.11%)</title><rect x="18.5802%" y="133" width="0.1081%" height="15" fill="rgb(211,33,43)" fg:x="222341" fg:w="1294"/><text x="18.8302%" y="143.50"></text></g><g><title>&lt;field::base::Mersenne31Field as field::field::Field&gt;::mul_assign (1,294 samples, 0.11%)</title><rect x="18.5802%" y="117" width="0.1081%" height="15" fill="rgb(245,58,50)" fg:x="222341" fg:w="1294"/><text x="18.8302%" y="127.50"></text></g><g><title>field::base::Mersenne31Field::mul_assign_impl (1,294 samples, 0.11%)</title><rect x="18.5802%" y="101" width="0.1081%" height="15" fill="rgb(244,68,36)" fg:x="222341" fg:w="1294"/><text x="18.8302%" y="111.50"></text></g><g><title>field::ops::mul_mod (1,294 samples, 0.11%)</title><rect x="18.5802%" y="85" width="0.1081%" height="15" fill="rgb(232,229,15)" fg:x="222341" fg:w="1294"/><text x="18.8302%" y="95.50"></text></g><g><title>field::ops::mul_mod_rt_riscv (1,294 samples, 0.11%)</title><rect x="18.5802%" y="69" width="0.1081%" height="15" fill="rgb(254,30,23)" fg:x="222341" fg:w="1294"/><text x="18.8302%" y="79.50"></text></g><g><title>&lt;field::quartic::Mersenne31Quartic as field::field::FieldExtension&lt;field::base::Mersenne31Field&gt;&gt;::sub_assign_base (146 samples, 0.01%)</title><rect x="18.6883%" y="149" width="0.0122%" height="15" fill="rgb(235,160,14)" fg:x="223635" fg:w="146"/><text x="18.9383%" y="159.50"></text></g><g><title>&lt;field::complex::Mersenne31Complex as field::field::FieldExtension&lt;field::base::Mersenne31Field&gt;&gt;::sub_assign_base (146 samples, 0.01%)</title><rect x="18.6883%" y="133" width="0.0122%" height="15" fill="rgb(212,155,44)" fg:x="223635" fg:w="146"/><text x="18.9383%" y="143.50"></text></g><g><title>&lt;F as field::field::FieldExtension&lt;F&gt;&gt;::sub_assign_base (146 samples, 0.01%)</title><rect x="18.6883%" y="117" width="0.0122%" height="15" fill="rgb(226,2,50)" fg:x="223635" fg:w="146"/><text x="18.9383%" y="127.50"></text></g><g><title>&lt;field::base::Mersenne31Field as field::field::Field&gt;::sub_assign (146 samples, 0.01%)</title><rect x="18.6883%" y="101" width="0.0122%" height="15" fill="rgb(234,177,6)" fg:x="223635" fg:w="146"/><text x="18.9383%" y="111.50"></text></g><g><title>field::base::Mersenne31Field::sub_assign_impl (146 samples, 0.01%)</title><rect x="18.6883%" y="85" width="0.0122%" height="15" fill="rgb(217,24,9)" fg:x="223635" fg:w="146"/><text x="18.9383%" y="95.50"></text></g><g><title>field::ops::sub_mod (146 samples, 0.01%)</title><rect x="18.6883%" y="69" width="0.0122%" height="15" fill="rgb(220,13,46)" fg:x="223635" fg:w="146"/><text x="18.9383%" y="79.50"></text></g><g><title>field::ops::sub_mod_rt_riscv (146 samples, 0.01%)</title><rect x="18.6883%" y="53" width="0.0122%" height="15" fill="rgb(239,221,27)" fg:x="223635" fg:w="146"/><text x="18.9383%" y="63.50"></text></g><g><title>verifier::concrete::quotient_eval_import::evaluate_every_row_except_last (50,605 samples, 4.23%)</title><rect x="14.4721%" y="165" width="4.2289%" height="15" fill="rgb(222,198,25)" fg:x="173182" fg:w="50605"/><text x="14.7221%" y="175.50">verif..</text></g><g><title>&lt;field::quartic::Mersenne31Quartic as field::field::Field&gt;::mul_assign (141 samples, 0.01%)</title><rect x="18.7080%" y="149" width="0.0118%" height="15" fill="rgb(211,99,13)" fg:x="223871" fg:w="141"/><text x="18.9580%" y="159.50"></text></g><g><title>verifier::concrete::quotient_eval_import::evaluate_every_row_except_two (265 samples, 0.02%)</title><rect x="18.7010%" y="165" width="0.0221%" height="15" fill="rgb(232,111,31)" fg:x="223787" fg:w="265"/><text x="18.9510%" y="175.50"></text></g><g><title>&lt;field::quartic::Mersenne31Quartic as field::field::Field&gt;::mul_assign (141 samples, 0.01%)</title><rect x="18.7376%" y="149" width="0.0118%" height="15" fill="rgb(245,82,37)" fg:x="224225" fg:w="141"/><text x="18.9876%" y="159.50"></text></g><g><title>verifier::concrete::quotient_eval_import::evaluate_quotient (51,978 samples, 4.34%)</title><rect x="14.4175%" y="181" width="4.3436%" height="15" fill="rgb(227,149,46)" fg:x="172528" fg:w="51978"/><text x="14.6675%" y="191.50">verif..</text></g><g><title>verifier::concrete::quotient_eval_import::evaluate_last_row_and_zero (454 samples, 0.04%)</title><rect x="18.7231%" y="165" width="0.0379%" height="15" fill="rgb(218,36,50)" fg:x="224052" fg:w="454"/><text x="18.9731%" y="175.50"></text></g><g><title>&lt;field::quartic::Mersenne31Quartic as field::field::Field&gt;::sub_assign (140 samples, 0.01%)</title><rect x="18.7494%" y="149" width="0.0117%" height="15" fill="rgb(226,80,48)" fg:x="224366" fg:w="140"/><text x="18.9994%" y="159.50"></text></g><g><title>&lt;field::complex::Mersenne31Complex as field::field::Field&gt;::sub_assign (140 samples, 0.01%)</title><rect x="18.7494%" y="133" width="0.0117%" height="15" fill="rgb(238,224,15)" fg:x="224366" fg:w="140"/><text x="18.9994%" y="143.50"></text></g><g><title>field::complex::Mersenne31Complex::sub_assign_impl (140 samples, 0.01%)</title><rect x="18.7494%" y="117" width="0.0117%" height="15" fill="rgb(241,136,10)" fg:x="224366" fg:w="140"/><text x="18.9994%" y="127.50"></text></g><g><title>field::base::Mersenne31Field::sub_assign_impl (140 samples, 0.01%)</title><rect x="18.7494%" y="101" width="0.0117%" height="15" fill="rgb(208,32,45)" fg:x="224366" fg:w="140"/><text x="18.9994%" y="111.50"></text></g><g><title>field::ops::sub_mod (140 samples, 0.01%)</title><rect x="18.7494%" y="85" width="0.0117%" height="15" fill="rgb(207,135,9)" fg:x="224366" fg:w="140"/><text x="18.9994%" y="95.50"></text></g><g><title>field::ops::sub_mod_rt_riscv (140 samples, 0.01%)</title><rect x="18.7494%" y="69" width="0.0117%" height="15" fill="rgb(206,86,44)" fg:x="224366" fg:w="140"/><text x="18.9994%" y="79.50"></text></g><g><title>&lt;non_determinism_source::CSRBasedSource as non_determinism_source::NonDeterminismSource&gt;::read_reduced_field_element (3,424 samples, 0.29%)</title><rect x="20.9238%" y="165" width="0.2861%" height="15" fill="rgb(245,177,15)" fg:x="250386" fg:w="3424"/><text x="21.1738%" y="175.50"></text></g><g><title>non_determinism_source::csr_read_field_element (3,424 samples, 0.29%)</title><rect x="20.9238%" y="149" width="0.2861%" height="15" fill="rgb(206,64,50)" fg:x="250386" fg:w="3424"/><text x="21.1738%" y="159.50"></text></g><g><title>&lt;non_determinism_source::CSRBasedSource as non_determinism_source::NonDeterminismSource&gt;::read_word (11,268 samples, 0.94%)</title><rect x="21.2099%" y="165" width="0.9416%" height="15" fill="rgb(234,36,40)" fg:x="253810" fg:w="11268"/><text x="21.4599%" y="175.50"></text></g><g><title>non_determinism_source::csr_read_word (11,268 samples, 0.94%)</title><rect x="21.2099%" y="149" width="0.9416%" height="15" fill="rgb(213,64,8)" fg:x="253810" fg:w="11268"/><text x="21.4599%" y="159.50"></text></g><g><title>verifier::concrete::skeleton_instance::&lt;impl verifier::skeleton::ProofSkeleton&lt;2_usize,64_usize,2_usize,4_usize,1_usize,1_usize,4_usize,376_usize,5_usize,4_usize,256_usize,32_usize&gt;&gt;::fill (53,568 samples, 4.48%)</title><rect x="18.7611%" y="181" width="4.4765%" height="15" fill="rgb(210,75,36)" fg:x="224506" fg:w="53568"/><text x="19.0111%" y="191.50">verif..</text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (12,982 samples, 1.08%)</title><rect x="22.1527%" y="165" width="1.0849%" height="15" fill="rgb(229,88,21)" fg:x="265092" fg:w="12982"/><text x="22.4027%" y="175.50"></text></g><g><title>core::ptr::write (12,982 samples, 1.08%)</title><rect x="22.1527%" y="149" width="1.0849%" height="15" fill="rgb(252,204,47)" fg:x="265092" fg:w="12982"/><text x="22.4027%" y="159.50"></text></g><g><title>&lt;prover::definitions::leaf_inclusion_verifier::blake2s_for_everything_with_alternative_compression::Blake2sForEverythingVerifierWithAlternativeCompression as prover::definitions::leaf_inclusion_verifier::LeafInclusionVerifier&gt;::verify_leaf_inclusion (14,045 samples, 1.17%)</title><rect x="23.2880%" y="165" width="1.1737%" height="15" fill="rgb(208,77,27)" fg:x="278678" fg:w="14045"/><text x="23.5380%" y="175.50"></text></g><g><title>blake2s_u32::state_with_extended_control::Blake2RoundFunctionEvaluator::reset (9,063 samples, 0.76%)</title><rect x="23.7043%" y="149" width="0.7574%" height="15" fill="rgb(221,76,26)" fg:x="283660" fg:w="9063"/><text x="23.9543%" y="159.50"></text></g><g><title>blake2s_u32::spec_memcopy_u32_nonoverlapping (8,586 samples, 0.72%)</title><rect x="23.7442%" y="133" width="0.7175%" height="15" fill="rgb(225,139,18)" fg:x="284137" fg:w="8586"/><text x="23.9942%" y="143.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write_volatile (8,586 samples, 0.72%)</title><rect x="23.7442%" y="117" width="0.7175%" height="15" fill="rgb(230,137,11)" fg:x="284137" fg:w="8586"/><text x="23.9942%" y="127.50"></text></g><g><title>core::ptr::write_volatile (8,586 samples, 0.72%)</title><rect x="23.7442%" y="101" width="0.7175%" height="15" fill="rgb(212,28,1)" fg:x="284137" fg:w="8586"/><text x="23.9942%" y="111.50"></text></g><g><title>&lt;non_determinism_source::CSRBasedSource as non_determinism_source::NonDeterminismSource&gt;::read_reduced_field_element (67,416 samples, 5.63%)</title><rect x="30.5472%" y="149" width="5.6337%" height="15" fill="rgb(248,164,17)" fg:x="365545" fg:w="67416"/><text x="30.7972%" y="159.50">&lt;non_de..</text></g><g><title>non_determinism_source::csr_read_field_element (67,416 samples, 5.63%)</title><rect x="30.5472%" y="133" width="5.6337%" height="15" fill="rgb(222,171,42)" fg:x="365545" fg:w="67416"/><text x="30.7972%" y="143.50">non_det..</text></g><g><title>&lt;non_determinism_source::CSRBasedSource as non_determinism_source::NonDeterminismSource&gt;::read_word (40,704 samples, 3.40%)</title><rect x="42.7630%" y="133" width="3.4015%" height="15" fill="rgb(243,84,45)" fg:x="511727" fg:w="40704"/><text x="43.0130%" y="143.50">&lt;no..</text></g><g><title>non_determinism_source::csr_read_word (40,704 samples, 3.40%)</title><rect x="42.7630%" y="117" width="3.4015%" height="15" fill="rgb(252,49,23)" fg:x="511727" fg:w="40704"/><text x="43.0130%" y="127.50">non..</text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (5,724 samples, 0.48%)</title><rect x="46.6428%" y="117" width="0.4783%" height="15" fill="rgb(215,19,7)" fg:x="558155" fg:w="5724"/><text x="46.8928%" y="127.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::read (5,724 samples, 0.48%)</title><rect x="47.1211%" y="117" width="0.4783%" height="15" fill="rgb(238,81,41)" fg:x="563879" fg:w="5724"/><text x="47.3711%" y="127.50"></text></g><g><title>core::ptr::read (5,724 samples, 0.48%)</title><rect x="47.1211%" y="101" width="0.4783%" height="15" fill="rgb(210,199,37)" fg:x="563879" fg:w="5724"/><text x="47.3711%" y="111.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (7,155 samples, 0.60%)</title><rect x="47.5995%" y="117" width="0.5979%" height="15" fill="rgb(244,192,49)" fg:x="569603" fg:w="7155"/><text x="47.8495%" y="127.50"></text></g><g><title>blake2s_u32::spec_memcopy_u32_nonoverlapping (30,051 samples, 2.51%)</title><rect x="46.1645%" y="133" width="2.5112%" height="15" fill="rgb(226,211,11)" fg:x="552431" fg:w="30051"/><text x="46.4145%" y="143.50">bl..</text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write_volatile (5,724 samples, 0.48%)</title><rect x="48.1974%" y="117" width="0.4783%" height="15" fill="rgb(236,162,54)" fg:x="576758" fg:w="5724"/><text x="48.4474%" y="127.50"></text></g><g><title>core::ptr::write_volatile (5,724 samples, 0.48%)</title><rect x="48.1974%" y="101" width="0.4783%" height="15" fill="rgb(220,229,9)" fg:x="576758" fg:w="5724"/><text x="48.4474%" y="111.50"></text></g><g><title>blake2s_u32::spec_memzero_u32 (7,632 samples, 0.64%)</title><rect x="48.6757%" y="133" width="0.6378%" height="15" fill="rgb(250,87,22)" fg:x="582482" fg:w="7632"/><text x="48.9257%" y="143.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write_volatile (7,632 samples, 0.64%)</title><rect x="48.6757%" y="117" width="0.6378%" height="15" fill="rgb(239,43,17)" fg:x="582482" fg:w="7632"/><text x="48.9257%" y="127.50"></text></g><g><title>core::ptr::write_volatile (7,632 samples, 0.64%)</title><rect x="48.6757%" y="101" width="0.6378%" height="15" fill="rgb(231,177,25)" fg:x="582482" fg:w="7632"/><text x="48.9257%" y="111.50"></text></g><g><title>blake2s_u32::state_with_extended_control::Blake2RoundFunctionEvaluator::compress_node (81,408 samples, 6.80%)</title><rect x="49.3135%" y="133" width="6.8029%" height="15" fill="rgb(219,179,1)" fg:x="590114" fg:w="81408"/><text x="49.5635%" y="143.50">blake2s_u..</text></g><g><title>blake2s_u32::state_with_extended_control::csr_trigger_delegation (71,232 samples, 5.95%)</title><rect x="50.1639%" y="117" width="5.9526%" height="15" fill="rgb(238,219,53)" fg:x="600290" fg:w="71232"/><text x="50.4139%" y="127.50">blake2s_..</text></g><g><title>blake2s_u32::state_with_extended_control::Blake2RoundFunctionEvaluator::run_round_function_with_input (62,487 samples, 5.22%)</title><rect x="56.1165%" y="133" width="5.2218%" height="15" fill="rgb(232,167,36)" fg:x="671522" fg:w="62487"/><text x="56.3665%" y="143.50">blake2..</text></g><g><title>blake2s_u32::state_with_extended_control::Blake2RoundFunctionEvaluator::run_round_function_with_input_and_byte_len (62,487 samples, 5.22%)</title><rect x="56.1165%" y="117" width="5.2218%" height="15" fill="rgb(244,19,51)" fg:x="671522" fg:w="62487"/><text x="56.3665%" y="127.50">blake2..</text></g><g><title>blake2s_u32::state_with_extended_control::csr_trigger_delegation (48,177 samples, 4.03%)</title><rect x="57.3123%" y="101" width="4.0260%" height="15" fill="rgb(224,6,22)" fg:x="685832" fg:w="48177"/><text x="57.5623%" y="111.50">blak..</text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (15,900 samples, 1.33%)</title><rect x="61.3382%" y="133" width="1.3287%" height="15" fill="rgb(224,145,5)" fg:x="734009" fg:w="15900"/><text x="61.5882%" y="143.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (15,900 samples, 1.33%)</title><rect x="61.3382%" y="117" width="1.3287%" height="15" fill="rgb(234,130,49)" fg:x="734009" fg:w="15900"/><text x="61.5882%" y="127.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (8,586 samples, 0.72%)</title><rect x="61.9494%" y="101" width="0.7175%" height="15" fill="rgb(254,6,2)" fg:x="741323" fg:w="8586"/><text x="62.1994%" y="111.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (1,749 samples, 0.15%)</title><rect x="62.6669%" y="133" width="0.1462%" height="15" fill="rgb(208,96,46)" fg:x="749909" fg:w="1749"/><text x="62.9169%" y="143.50"></text></g><g><title>&lt;prover::definitions::leaf_inclusion_verifier::blake2s_for_everything_with_alternative_compression::Blake2sForEverythingVerifierWithAlternativeCompression as prover::definitions::leaf_inclusion_verifier::LeafInclusionVerifier&gt;::verify_leaf_inclusion (320,552 samples, 26.79%)</title><rect x="36.1853%" y="149" width="26.7873%" height="15" fill="rgb(239,3,39)" fg:x="433014" fg:w="320552"/><text x="36.4353%" y="159.50">&lt;prover::definitions::leaf_inclusion_verifi..</text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (1,908 samples, 0.16%)</title><rect x="62.8131%" y="133" width="0.1594%" height="15" fill="rgb(233,210,1)" fg:x="751658" fg:w="1908"/><text x="63.0631%" y="143.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (1,908 samples, 0.16%)</title><rect x="62.8131%" y="117" width="0.1594%" height="15" fill="rgb(244,137,37)" fg:x="751658" fg:w="1908"/><text x="63.0631%" y="127.50"></text></g><g><title>core::slice::index::get_noubcheck (1,908 samples, 0.16%)</title><rect x="62.8131%" y="101" width="0.1594%" height="15" fill="rgb(240,136,2)" fg:x="751658" fg:w="1908"/><text x="63.0631%" y="111.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (477 samples, 0.04%)</title><rect x="62.9725%" y="149" width="0.0399%" height="15" fill="rgb(239,18,37)" fg:x="753566" fg:w="477"/><text x="63.2225%" y="159.50"></text></g><g><title>verifier::concrete::skeleton_instance::&lt;impl verifier::skeleton::QueryValues&lt;21_usize,14_usize,26_usize,11_usize,279_usize,30_usize,184_usize,4_usize,128_usize,5_usize&gt;&gt;::fill_array (509,710 samples, 42.59%)</title><rect x="23.2392%" y="181" width="42.5945%" height="15" fill="rgb(218,185,22)" fg:x="278094" fg:w="509710"/><text x="23.4892%" y="191.50">verifier::concrete::skeleton_instance::&lt;impl verifier::skeleton::Query..</text></g><g><title>verifier::concrete::skeleton_instance::&lt;impl verifier::skeleton::QueryValues&lt;21_usize,14_usize,26_usize,11_usize,279_usize,30_usize,184_usize,4_usize,128_usize,5_usize&gt;&gt;::fill (495,081 samples, 41.37%)</title><rect x="24.4617%" y="165" width="41.3720%" height="15" fill="rgb(225,218,4)" fg:x="292723" fg:w="495081"/><text x="24.7117%" y="175.50">verifier::concrete::skeleton_instance::&lt;impl verifier::skeleton::Que..</text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (33,761 samples, 2.82%)</title><rect x="63.0124%" y="149" width="2.8213%" height="15" fill="rgb(230,182,32)" fg:x="754043" fg:w="33761"/><text x="63.2624%" y="159.50">co..</text></g><g><title>core::ptr::write (33,761 samples, 2.82%)</title><rect x="63.0124%" y="133" width="2.8213%" height="15" fill="rgb(242,56,43)" fg:x="754043" fg:w="33761"/><text x="63.2624%" y="143.50">co..</text></g><g><title>&lt;field::quartic::Mersenne31Quartic as field::field::Field&gt;::add_assign (530 samples, 0.04%)</title><rect x="71.3345%" y="165" width="0.0443%" height="15" fill="rgb(233,99,24)" fg:x="853630" fg:w="530"/><text x="71.5845%" y="175.50"></text></g><g><title>&lt;field::complex::Mersenne31Complex as field::field::Field&gt;::add_assign (530 samples, 0.04%)</title><rect x="71.3345%" y="149" width="0.0443%" height="15" fill="rgb(234,209,42)" fg:x="853630" fg:w="530"/><text x="71.5845%" y="159.50"></text></g><g><title>field::complex::Mersenne31Complex::add_assign_impl (530 samples, 0.04%)</title><rect x="71.3345%" y="133" width="0.0443%" height="15" fill="rgb(227,7,12)" fg:x="853630" fg:w="530"/><text x="71.5845%" y="143.50"></text></g><g><title>field::base::Mersenne31Field::add_assign_impl (530 samples, 0.04%)</title><rect x="71.3345%" y="117" width="0.0443%" height="15" fill="rgb(245,203,43)" fg:x="853630" fg:w="530"/><text x="71.5845%" y="127.50"></text></g><g><title>field::ops::add_mod (530 samples, 0.04%)</title><rect x="71.3345%" y="101" width="0.0443%" height="15" fill="rgb(238,205,33)" fg:x="853630" fg:w="530"/><text x="71.5845%" y="111.50"></text></g><g><title>field::ops::add_mod_rt_riscv (530 samples, 0.04%)</title><rect x="71.3345%" y="85" width="0.0443%" height="15" fill="rgb(231,56,7)" fg:x="853630" fg:w="530"/><text x="71.5845%" y="95.50"></text></g><g><title>&lt;field::quartic::Mersenne31Quartic as field::field::Field&gt;::fused_mul_add_assign (113,579 samples, 9.49%)</title><rect x="71.3788%" y="165" width="9.4914%" height="15" fill="rgb(244,186,29)" fg:x="854160" fg:w="113579"/><text x="71.6288%" y="175.50">&lt;field::quarti..</text></g><g><title>field::quartic::fma_implementation_via_delegation (113,579 samples, 9.49%)</title><rect x="71.3788%" y="149" width="9.4914%" height="15" fill="rgb(234,111,31)" fg:x="854160" fg:w="113579"/><text x="71.6288%" y="159.50">field::quartic..</text></g><g><title>&lt;field::base::Mersenne31Field as field::field::Field&gt;::double (212 samples, 0.02%)</title><rect x="80.8790%" y="133" width="0.0177%" height="15" fill="rgb(241,149,10)" fg:x="967845" fg:w="212"/><text x="81.1290%" y="143.50"></text></g><g><title>field::base::Mersenne31Field::double_impl (212 samples, 0.02%)</title><rect x="80.8790%" y="117" width="0.0177%" height="15" fill="rgb(249,206,44)" fg:x="967845" fg:w="212"/><text x="81.1290%" y="127.50"></text></g><g><title>field::base::Mersenne31Field::add_assign_impl (212 samples, 0.02%)</title><rect x="80.8790%" y="101" width="0.0177%" height="15" fill="rgb(251,153,30)" fg:x="967845" fg:w="212"/><text x="81.1290%" y="111.50"></text></g><g><title>field::ops::add_mod (212 samples, 0.02%)</title><rect x="80.8790%" y="85" width="0.0177%" height="15" fill="rgb(239,152,38)" fg:x="967845" fg:w="212"/><text x="81.1290%" y="95.50"></text></g><g><title>field::ops::add_mod_rt_riscv (212 samples, 0.02%)</title><rect x="80.8790%" y="69" width="0.0177%" height="15" fill="rgb(249,139,47)" fg:x="967845" fg:w="212"/><text x="81.1290%" y="79.50"></text></g><g><title>&lt;field::complex::Mersenne31Complex as field::field::BaseField&gt;::mul_by_non_residue (424 samples, 0.04%)</title><rect x="80.8701%" y="149" width="0.0354%" height="15" fill="rgb(244,64,35)" fg:x="967739" fg:w="424"/><text x="81.1201%" y="159.50"></text></g><g><title>&lt;field::complex::Mersenne31Complex as field::field::Field&gt;::add_assign (636 samples, 0.05%)</title><rect x="80.9056%" y="149" width="0.0531%" height="15" fill="rgb(216,46,15)" fg:x="968163" fg:w="636"/><text x="81.1556%" y="159.50"></text></g><g><title>field::complex::Mersenne31Complex::add_assign_impl (636 samples, 0.05%)</title><rect x="80.9056%" y="133" width="0.0531%" height="15" fill="rgb(250,74,19)" fg:x="968163" fg:w="636"/><text x="81.1556%" y="143.50"></text></g><g><title>field::base::Mersenne31Field::add_assign_impl (636 samples, 0.05%)</title><rect x="80.9056%" y="117" width="0.0531%" height="15" fill="rgb(249,42,33)" fg:x="968163" fg:w="636"/><text x="81.1556%" y="127.50"></text></g><g><title>field::ops::add_mod (636 samples, 0.05%)</title><rect x="80.9056%" y="101" width="0.0531%" height="15" fill="rgb(242,149,17)" fg:x="968163" fg:w="636"/><text x="81.1556%" y="111.50"></text></g><g><title>field::ops::add_mod_rt_riscv (636 samples, 0.05%)</title><rect x="80.9056%" y="85" width="0.0531%" height="15" fill="rgb(244,29,21)" fg:x="968163" fg:w="636"/><text x="81.1556%" y="95.50"></text></g><g><title>field::base::Mersenne31Field::add_assign_impl (477 samples, 0.04%)</title><rect x="80.9587%" y="117" width="0.0399%" height="15" fill="rgb(220,130,37)" fg:x="968799" fg:w="477"/><text x="81.2087%" y="127.50"></text></g><g><title>field::ops::add_mod (477 samples, 0.04%)</title><rect x="80.9587%" y="101" width="0.0399%" height="15" fill="rgb(211,67,2)" fg:x="968799" fg:w="477"/><text x="81.2087%" y="111.50"></text></g><g><title>field::ops::add_mod_rt_riscv (477 samples, 0.04%)</title><rect x="80.9587%" y="85" width="0.0399%" height="15" fill="rgb(235,68,52)" fg:x="968799" fg:w="477"/><text x="81.2087%" y="95.50"></text></g><g><title>field::base::Mersenne31Field::mul_assign_impl (1,643 samples, 0.14%)</title><rect x="80.9986%" y="117" width="0.1373%" height="15" fill="rgb(246,142,3)" fg:x="969276" fg:w="1643"/><text x="81.2486%" y="127.50"></text></g><g><title>field::ops::mul_mod (1,643 samples, 0.14%)</title><rect x="80.9986%" y="101" width="0.1373%" height="15" fill="rgb(241,25,7)" fg:x="969276" fg:w="1643"/><text x="81.2486%" y="111.50"></text></g><g><title>field::ops::mul_mod_rt_riscv (1,643 samples, 0.14%)</title><rect x="80.9986%" y="85" width="0.1373%" height="15" fill="rgb(242,119,39)" fg:x="969276" fg:w="1643"/><text x="81.2486%" y="95.50"></text></g><g><title>&lt;field::complex::Mersenne31Complex as field::field::Field&gt;::mul_assign (2,438 samples, 0.20%)</title><rect x="80.9587%" y="149" width="0.2037%" height="15" fill="rgb(241,98,45)" fg:x="968799" fg:w="2438"/><text x="81.2087%" y="159.50"></text></g><g><title>field::complex::Mersenne31Complex::mul_assign_impl (2,438 samples, 0.20%)</title><rect x="80.9587%" y="133" width="0.2037%" height="15" fill="rgb(254,28,30)" fg:x="968799" fg:w="2438"/><text x="81.2087%" y="143.50"></text></g><g><title>field::base::Mersenne31Field::sub_assign_impl (318 samples, 0.03%)</title><rect x="81.1359%" y="117" width="0.0266%" height="15" fill="rgb(241,142,54)" fg:x="970919" fg:w="318"/><text x="81.3859%" y="127.50"></text></g><g><title>field::ops::sub_mod (318 samples, 0.03%)</title><rect x="81.1359%" y="101" width="0.0266%" height="15" fill="rgb(222,85,15)" fg:x="970919" fg:w="318"/><text x="81.3859%" y="111.50"></text></g><g><title>field::ops::sub_mod_rt_riscv (318 samples, 0.03%)</title><rect x="81.1359%" y="85" width="0.0266%" height="15" fill="rgb(210,85,47)" fg:x="970919" fg:w="318"/><text x="81.3859%" y="95.50"></text></g><g><title>&lt;field::quartic::Mersenne31Quartic as field::field::Field&gt;::mul_assign (4,081 samples, 0.34%)</title><rect x="80.8701%" y="165" width="0.3410%" height="15" fill="rgb(224,206,25)" fg:x="967739" fg:w="4081"/><text x="81.1201%" y="175.50"></text></g><g><title>&lt;field::complex::Mersenne31Complex as field::field::Field&gt;::sub_assign (583 samples, 0.05%)</title><rect x="81.1625%" y="149" width="0.0487%" height="15" fill="rgb(243,201,19)" fg:x="971237" fg:w="583"/><text x="81.4125%" y="159.50"></text></g><g><title>field::complex::Mersenne31Complex::sub_assign_impl (583 samples, 0.05%)</title><rect x="81.1625%" y="133" width="0.0487%" height="15" fill="rgb(236,59,4)" fg:x="971237" fg:w="583"/><text x="81.4125%" y="143.50"></text></g><g><title>field::base::Mersenne31Field::sub_assign_impl (583 samples, 0.05%)</title><rect x="81.1625%" y="117" width="0.0487%" height="15" fill="rgb(254,179,45)" fg:x="971237" fg:w="583"/><text x="81.4125%" y="127.50"></text></g><g><title>field::ops::sub_mod (583 samples, 0.05%)</title><rect x="81.1625%" y="101" width="0.0487%" height="15" fill="rgb(226,14,10)" fg:x="971237" fg:w="583"/><text x="81.4125%" y="111.50"></text></g><g><title>field::ops::sub_mod_rt_riscv (583 samples, 0.05%)</title><rect x="81.1625%" y="85" width="0.0487%" height="15" fill="rgb(244,27,41)" fg:x="971237" fg:w="583"/><text x="81.4125%" y="95.50"></text></g><g><title>&lt;field::quartic::Mersenne31Quartic as field::field::Field&gt;::sub_assign (1,537 samples, 0.13%)</title><rect x="81.2112%" y="165" width="0.1284%" height="15" fill="rgb(235,35,32)" fg:x="971820" fg:w="1537"/><text x="81.4612%" y="175.50"></text></g><g><title>&lt;field::complex::Mersenne31Complex as field::field::Field&gt;::sub_assign (1,537 samples, 0.13%)</title><rect x="81.2112%" y="149" width="0.1284%" height="15" fill="rgb(218,68,31)" fg:x="971820" fg:w="1537"/><text x="81.4612%" y="159.50"></text></g><g><title>field::complex::Mersenne31Complex::sub_assign_impl (1,537 samples, 0.13%)</title><rect x="81.2112%" y="133" width="0.1284%" height="15" fill="rgb(207,120,37)" fg:x="971820" fg:w="1537"/><text x="81.4612%" y="143.50"></text></g><g><title>field::base::Mersenne31Field::sub_assign_impl (1,537 samples, 0.13%)</title><rect x="81.2112%" y="117" width="0.1284%" height="15" fill="rgb(227,98,0)" fg:x="971820" fg:w="1537"/><text x="81.4612%" y="127.50"></text></g><g><title>field::ops::sub_mod (1,537 samples, 0.13%)</title><rect x="81.2112%" y="101" width="0.1284%" height="15" fill="rgb(207,7,3)" fg:x="971820" fg:w="1537"/><text x="81.4612%" y="111.50"></text></g><g><title>field::ops::sub_mod_rt_riscv (1,537 samples, 0.13%)</title><rect x="81.2112%" y="85" width="0.1284%" height="15" fill="rgb(206,98,19)" fg:x="971820" fg:w="1537"/><text x="81.4612%" y="95.50"></text></g><g><title>field::base::Mersenne31Field::add_assign_impl (848 samples, 0.07%)</title><rect x="81.3883%" y="117" width="0.0709%" height="15" fill="rgb(217,5,26)" fg:x="973940" fg:w="848"/><text x="81.6383%" y="127.50"></text></g><g><title>field::ops::add_mod (477 samples, 0.04%)</title><rect x="81.4193%" y="101" width="0.0399%" height="15" fill="rgb(235,190,38)" fg:x="974311" fg:w="477"/><text x="81.6693%" y="111.50"></text></g><g><title>field::ops::add_mod_rt_riscv (477 samples, 0.04%)</title><rect x="81.4193%" y="85" width="0.0399%" height="15" fill="rgb(247,86,24)" fg:x="974311" fg:w="477"/><text x="81.6693%" y="95.50"></text></g><g><title>field::base::Mersenne31Field::mul_assign_impl (1,643 samples, 0.14%)</title><rect x="81.4592%" y="117" width="0.1373%" height="15" fill="rgb(205,101,16)" fg:x="974788" fg:w="1643"/><text x="81.7092%" y="127.50"></text></g><g><title>field::ops::mul_mod (1,431 samples, 0.12%)</title><rect x="81.4769%" y="101" width="0.1196%" height="15" fill="rgb(246,168,33)" fg:x="975000" fg:w="1431"/><text x="81.7269%" y="111.50"></text></g><g><title>field::ops::mul_mod_rt_riscv (1,431 samples, 0.12%)</title><rect x="81.4769%" y="85" width="0.1196%" height="15" fill="rgb(231,114,1)" fg:x="975000" fg:w="1431"/><text x="81.7269%" y="95.50"></text></g><g><title>&lt;field::quartic::Mersenne31Quartic as field::field::FieldExtension&lt;field::complex::Mersenne31Complex&gt;&gt;::mul_assign_by_base (3,604 samples, 0.30%)</title><rect x="81.3396%" y="165" width="0.3012%" height="15" fill="rgb(207,184,53)" fg:x="973357" fg:w="3604"/><text x="81.5896%" y="175.50"></text></g><g><title>&lt;field::complex::Mersenne31Complex as field::field::Field&gt;::mul_assign (3,604 samples, 0.30%)</title><rect x="81.3396%" y="149" width="0.3012%" height="15" fill="rgb(224,95,51)" fg:x="973357" fg:w="3604"/><text x="81.5896%" y="159.50"></text></g><g><title>field::complex::Mersenne31Complex::mul_assign_impl (3,604 samples, 0.30%)</title><rect x="81.3396%" y="133" width="0.3012%" height="15" fill="rgb(212,188,45)" fg:x="973357" fg:w="3604"/><text x="81.5896%" y="143.50"></text></g><g><title>field::base::Mersenne31Field::sub_assign_impl (530 samples, 0.04%)</title><rect x="81.5965%" y="117" width="0.0443%" height="15" fill="rgb(223,154,38)" fg:x="976431" fg:w="530"/><text x="81.8465%" y="127.50"></text></g><g><title>field::ops::sub_mod (318 samples, 0.03%)</title><rect x="81.6142%" y="101" width="0.0266%" height="15" fill="rgb(251,22,52)" fg:x="976643" fg:w="318"/><text x="81.8642%" y="111.50"></text></g><g><title>field::ops::sub_mod_rt_riscv (318 samples, 0.03%)</title><rect x="81.6142%" y="85" width="0.0266%" height="15" fill="rgb(229,209,22)" fg:x="976643" fg:w="318"/><text x="81.8642%" y="95.50"></text></g><g><title>core::hint::black_box (265 samples, 0.02%)</title><rect x="81.6452%" y="165" width="0.0221%" height="15" fill="rgb(234,138,34)" fg:x="977014" fg:w="265"/><text x="81.8952%" y="175.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (2,226 samples, 0.19%)</title><rect x="81.6674%" y="165" width="0.1860%" height="15" fill="rgb(212,95,11)" fg:x="977279" fg:w="2226"/><text x="81.9174%" y="175.50"></text></g><g><title>verifier::utils::accumulate_over_row_for_consistency_check_with_fma (192,019 samples, 16.05%)</title><rect x="65.8337%" y="181" width="16.0463%" height="15" fill="rgb(240,179,47)" fg:x="787804" fg:w="192019"/><text x="66.0837%" y="191.50">verifier::utils::accumula..</text></g><g><title>field::quartic::Mersenne31Quartic::mul_assign_with_fma (318 samples, 0.03%)</title><rect x="81.8534%" y="165" width="0.0266%" height="15" fill="rgb(240,163,11)" fg:x="979505" fg:w="318"/><text x="82.1034%" y="175.50"></text></g><g><title>&lt;field::quartic::Mersenne31Quartic as field::field::Field&gt;::fused_mul_add_assign (318 samples, 0.03%)</title><rect x="81.8534%" y="149" width="0.0266%" height="15" fill="rgb(236,37,12)" fg:x="979505" fg:w="318"/><text x="82.1034%" y="159.50"></text></g><g><title>field::quartic::fma_implementation_via_delegation (318 samples, 0.03%)</title><rect x="81.8534%" y="133" width="0.0266%" height="15" fill="rgb(232,164,16)" fg:x="979505" fg:w="318"/><text x="82.1034%" y="143.50"></text></g><g><title>&lt;field::quartic::Mersenne31Quartic as field::field::Field&gt;::fused_mul_add_assign (1,915 samples, 0.16%)</title><rect x="81.9810%" y="165" width="0.1600%" height="15" fill="rgb(244,205,15)" fg:x="981032" fg:w="1915"/><text x="82.2310%" y="175.50"></text></g><g><title>field::quartic::fma_implementation_via_delegation (1,915 samples, 0.16%)</title><rect x="81.9810%" y="149" width="0.1600%" height="15" fill="rgb(223,117,47)" fg:x="981032" fg:w="1915"/><text x="82.2310%" y="159.50"></text></g><g><title>verifier::utils::precompute_for_consistency_checks_with_fma (3,308 samples, 0.28%)</title><rect x="81.8800%" y="181" width="0.2764%" height="15" fill="rgb(244,107,35)" fg:x="979823" fg:w="3308"/><text x="82.1300%" y="191.50"></text></g><g><title>field::quartic::Mersenne31Quartic::pow_with_fma (163 samples, 0.01%)</title><rect x="82.1428%" y="165" width="0.0136%" height="15" fill="rgb(205,140,8)" fg:x="982968" fg:w="163"/><text x="82.3928%" y="175.50"></text></g><g><title>&lt;field::quartic::Mersenne31Quartic as field::field::Field&gt;::fused_mul_add_assign (11,554 samples, 0.97%)</title><rect x="82.2273%" y="165" width="0.9655%" height="15" fill="rgb(228,84,46)" fg:x="983979" fg:w="11554"/><text x="82.4773%" y="175.50"></text></g><g><title>field::quartic::fma_implementation_via_delegation (11,554 samples, 0.97%)</title><rect x="82.2273%" y="149" width="0.9655%" height="15" fill="rgb(254,188,9)" fg:x="983979" fg:w="11554"/><text x="82.4773%" y="159.50"></text></g><g><title>verifier::verify_with_configuration::evaluate_monomial_form (12,614 samples, 1.05%)</title><rect x="82.1564%" y="181" width="1.0541%" height="15" fill="rgb(206,112,54)" fg:x="983131" fg:w="12614"/><text x="82.4064%" y="191.50"></text></g><g><title>&lt;field::quartic::Mersenne31Quartic as field::field::FieldExtension&lt;field::complex::Mersenne31Complex&gt;&gt;::from_base (212 samples, 0.02%)</title><rect x="83.1928%" y="165" width="0.0177%" height="15" fill="rgb(216,84,49)" fg:x="995533" fg:w="212"/><text x="83.4428%" y="175.50"></text></g><g><title>field::base::Mersenne31Field::double_impl (1,590 samples, 0.13%)</title><rect x="88.7467%" y="133" width="0.1329%" height="15" fill="rgb(214,194,35)" fg:x="1061995" fg:w="1590"/><text x="88.9967%" y="143.50"></text></g><g><title>field::base::Mersenne31Field::add_assign_impl (1,590 samples, 0.13%)</title><rect x="88.7467%" y="117" width="0.1329%" height="15" fill="rgb(249,28,3)" fg:x="1061995" fg:w="1590"/><text x="88.9967%" y="127.50"></text></g><g><title>field::ops::add_mod (1,590 samples, 0.13%)</title><rect x="88.7467%" y="101" width="0.1329%" height="15" fill="rgb(222,56,52)" fg:x="1061995" fg:w="1590"/><text x="88.9967%" y="111.50"></text></g><g><title>field::ops::add_mod_rt_riscv (1,590 samples, 0.13%)</title><rect x="88.7467%" y="85" width="0.1329%" height="15" fill="rgb(245,217,50)" fg:x="1061995" fg:w="1590"/><text x="88.9967%" y="95.50"></text></g><g><title>field::base::Mersenne31Field::mul_assign_impl (4,770 samples, 0.40%)</title><rect x="88.8796%" y="133" width="0.3986%" height="15" fill="rgb(213,201,24)" fg:x="1063585" fg:w="4770"/><text x="89.1296%" y="143.50"></text></g><g><title>field::ops::mul_mod (4,770 samples, 0.40%)</title><rect x="88.8796%" y="117" width="0.3986%" height="15" fill="rgb(248,116,28)" fg:x="1063585" fg:w="4770"/><text x="89.1296%" y="127.50"></text></g><g><title>field::ops::mul_mod_rt_riscv (4,770 samples, 0.40%)</title><rect x="88.8796%" y="101" width="0.3986%" height="15" fill="rgb(219,72,43)" fg:x="1063585" fg:w="4770"/><text x="89.1296%" y="111.50"></text></g><g><title>&lt;field::complex::Mersenne31Complex as field::field::Field&gt;::square (7,950 samples, 0.66%)</title><rect x="88.7467%" y="165" width="0.6644%" height="15" fill="rgb(209,138,14)" fg:x="1061995" fg:w="7950"/><text x="88.9967%" y="175.50"></text></g><g><title>field::complex::Mersenne31Complex::square_impl (7,950 samples, 0.66%)</title><rect x="88.7467%" y="149" width="0.6644%" height="15" fill="rgb(222,18,33)" fg:x="1061995" fg:w="7950"/><text x="88.9967%" y="159.50"></text></g><g><title>field::base::Mersenne31Field::sub_assign_impl (1,590 samples, 0.13%)</title><rect x="89.2782%" y="133" width="0.1329%" height="15" fill="rgb(213,199,7)" fg:x="1068355" fg:w="1590"/><text x="89.5282%" y="143.50"></text></g><g><title>field::ops::sub_mod (1,590 samples, 0.13%)</title><rect x="89.2782%" y="117" width="0.1329%" height="15" fill="rgb(250,110,10)" fg:x="1068355" fg:w="1590"/><text x="89.5282%" y="127.50"></text></g><g><title>field::ops::sub_mod_rt_riscv (1,590 samples, 0.13%)</title><rect x="89.2782%" y="101" width="0.1329%" height="15" fill="rgb(248,123,6)" fg:x="1068355" fg:w="1590"/><text x="89.5282%" y="111.50"></text></g><g><title>&lt;field::quartic::Mersenne31Quartic as core::cmp::PartialEq&gt;::eq (3,180 samples, 0.27%)</title><rect x="89.4111%" y="165" width="0.2657%" height="15" fill="rgb(206,91,31)" fg:x="1069945" fg:w="3180"/><text x="89.6611%" y="175.50"></text></g><g><title>&lt;field::complex::Mersenne31Complex as core::cmp::PartialEq&gt;::eq (3,180 samples, 0.27%)</title><rect x="89.4111%" y="149" width="0.2657%" height="15" fill="rgb(211,154,13)" fg:x="1069945" fg:w="3180"/><text x="89.6611%" y="159.50"></text></g><g><title>&lt;field::base::Mersenne31Field as core::cmp::PartialEq&gt;::eq (3,180 samples, 0.27%)</title><rect x="89.4111%" y="133" width="0.2657%" height="15" fill="rgb(225,148,7)" fg:x="1069945" fg:w="3180"/><text x="89.6611%" y="143.50"></text></g><g><title>field::base::Mersenne31Field::to_reduced_u32 (3,180 samples, 0.27%)</title><rect x="89.4111%" y="117" width="0.2657%" height="15" fill="rgb(220,160,43)" fg:x="1069945" fg:w="3180"/><text x="89.6611%" y="127.50"></text></g><g><title>&lt;field::quartic::Mersenne31Quartic as field::field::Field&gt;::fused_mul_add_assign (7,685 samples, 0.64%)</title><rect x="89.6768%" y="165" width="0.6422%" height="15" fill="rgb(213,52,39)" fg:x="1073125" fg:w="7685"/><text x="89.9268%" y="175.50"></text></g><g><title>field::quartic::fma_implementation_via_delegation (7,685 samples, 0.64%)</title><rect x="89.6768%" y="149" width="0.6422%" height="15" fill="rgb(243,137,7)" fg:x="1073125" fg:w="7685"/><text x="89.9268%" y="159.50"></text></g><g><title>&lt;field::quartic::Mersenne31Quartic as field::field::FieldExtension&lt;field::complex::Mersenne31Complex&gt;&gt;::from_base (4,240 samples, 0.35%)</title><rect x="90.3190%" y="165" width="0.3543%" height="15" fill="rgb(230,79,13)" fg:x="1080810" fg:w="4240"/><text x="90.5690%" y="175.50"></text></g><g><title>field::base::Mersenne31Field::add_assign_impl (530 samples, 0.04%)</title><rect x="90.6734%" y="117" width="0.0443%" height="15" fill="rgb(247,105,23)" fg:x="1085050" fg:w="530"/><text x="90.9234%" y="127.50"></text></g><g><title>field::ops::add_mod (530 samples, 0.04%)</title><rect x="90.6734%" y="101" width="0.0443%" height="15" fill="rgb(223,179,41)" fg:x="1085050" fg:w="530"/><text x="90.9234%" y="111.50"></text></g><g><title>field::ops::add_mod_rt_riscv (530 samples, 0.04%)</title><rect x="90.6734%" y="85" width="0.0443%" height="15" fill="rgb(218,9,34)" fg:x="1085050" fg:w="530"/><text x="90.9234%" y="95.50"></text></g><g><title>field::base::Mersenne31Field::mul_assign_impl (2,120 samples, 0.18%)</title><rect x="90.7176%" y="117" width="0.1772%" height="15" fill="rgb(222,106,8)" fg:x="1085580" fg:w="2120"/><text x="90.9676%" y="127.50"></text></g><g><title>field::ops::mul_mod (2,120 samples, 0.18%)</title><rect x="90.7176%" y="101" width="0.1772%" height="15" fill="rgb(211,220,0)" fg:x="1085580" fg:w="2120"/><text x="90.9676%" y="111.50"></text></g><g><title>field::ops::mul_mod_rt_riscv (2,120 samples, 0.18%)</title><rect x="90.7176%" y="85" width="0.1772%" height="15" fill="rgb(229,52,16)" fg:x="1085580" fg:w="2120"/><text x="90.9676%" y="95.50"></text></g><g><title>&lt;field::quartic::Mersenne31Quartic as field::field::FieldExtension&lt;field::complex::Mersenne31Complex&gt;&gt;::mul_assign_by_base (3,180 samples, 0.27%)</title><rect x="90.6734%" y="165" width="0.2657%" height="15" fill="rgb(212,155,18)" fg:x="1085050" fg:w="3180"/><text x="90.9234%" y="175.50"></text></g><g><title>&lt;field::complex::Mersenne31Complex as field::field::Field&gt;::mul_assign (3,180 samples, 0.27%)</title><rect x="90.6734%" y="149" width="0.2657%" height="15" fill="rgb(242,21,14)" fg:x="1085050" fg:w="3180"/><text x="90.9234%" y="159.50"></text></g><g><title>field::complex::Mersenne31Complex::mul_assign_impl (3,180 samples, 0.27%)</title><rect x="90.6734%" y="133" width="0.2657%" height="15" fill="rgb(222,19,48)" fg:x="1085050" fg:w="3180"/><text x="90.9234%" y="143.50"></text></g><g><title>field::base::Mersenne31Field::sub_assign_impl (530 samples, 0.04%)</title><rect x="90.8948%" y="117" width="0.0443%" height="15" fill="rgb(232,45,27)" fg:x="1087700" fg:w="530"/><text x="91.1448%" y="127.50"></text></g><g><title>field::ops::sub_mod (530 samples, 0.04%)</title><rect x="90.8948%" y="101" width="0.0443%" height="15" fill="rgb(249,103,42)" fg:x="1087700" fg:w="530"/><text x="91.1448%" y="111.50"></text></g><g><title>field::ops::sub_mod_rt_riscv (530 samples, 0.04%)</title><rect x="90.8948%" y="85" width="0.0443%" height="15" fill="rgb(246,81,33)" fg:x="1087700" fg:w="530"/><text x="91.1448%" y="95.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (2,120 samples, 0.18%)</title><rect x="90.9391%" y="165" width="0.1772%" height="15" fill="rgb(252,33,42)" fg:x="1088230" fg:w="2120"/><text x="91.1891%" y="175.50"></text></g><g><title>field::quartic::Mersenne31Quartic::add_assign_with_fma (7,685 samples, 0.64%)</title><rect x="91.1163%" y="165" width="0.6422%" height="15" fill="rgb(209,212,41)" fg:x="1090350" fg:w="7685"/><text x="91.3663%" y="175.50"></text></g><g><title>&lt;field::quartic::Mersenne31Quartic as field::field::Field&gt;::fused_mul_add_assign (7,685 samples, 0.64%)</title><rect x="91.1163%" y="149" width="0.6422%" height="15" fill="rgb(207,154,6)" fg:x="1090350" fg:w="7685"/><text x="91.3663%" y="159.50"></text></g><g><title>field::quartic::fma_implementation_via_delegation (7,685 samples, 0.64%)</title><rect x="91.1163%" y="133" width="0.6422%" height="15" fill="rgb(223,64,47)" fg:x="1090350" fg:w="7685"/><text x="91.3663%" y="143.50"></text></g><g><title>field::quartic::Mersenne31Quartic::mul_assign_with_fma (8,480 samples, 0.71%)</title><rect x="91.7585%" y="165" width="0.7086%" height="15" fill="rgb(211,161,38)" fg:x="1098035" fg:w="8480"/><text x="92.0085%" y="175.50"></text></g><g><title>&lt;field::quartic::Mersenne31Quartic as field::field::Field&gt;::fused_mul_add_assign (8,480 samples, 0.71%)</title><rect x="91.7585%" y="149" width="0.7086%" height="15" fill="rgb(219,138,40)" fg:x="1098035" fg:w="8480"/><text x="92.0085%" y="159.50"></text></g><g><title>field::quartic::fma_implementation_via_delegation (8,480 samples, 0.71%)</title><rect x="91.7585%" y="133" width="0.7086%" height="15" fill="rgb(241,228,46)" fg:x="1098035" fg:w="8480"/><text x="92.0085%" y="143.50"></text></g><g><title>field::quartic::Mersenne31Quartic::negate_self_and_add_other_with_fma (7,685 samples, 0.64%)</title><rect x="92.4671%" y="165" width="0.6422%" height="15" fill="rgb(223,209,38)" fg:x="1106515" fg:w="7685"/><text x="92.7171%" y="175.50"></text></g><g><title>&lt;field::quartic::Mersenne31Quartic as field::field::Field&gt;::fused_mul_add_assign (7,685 samples, 0.64%)</title><rect x="92.4671%" y="149" width="0.6422%" height="15" fill="rgb(236,164,45)" fg:x="1106515" fg:w="7685"/><text x="92.7171%" y="159.50"></text></g><g><title>field::quartic::fma_implementation_via_delegation (7,685 samples, 0.64%)</title><rect x="92.4671%" y="133" width="0.6422%" height="15" fill="rgb(231,15,5)" fg:x="1106515" fg:w="7685"/><text x="92.7171%" y="143.50"></text></g><g><title>field::quartic::Mersenne31Quartic::pow_with_fma (59,198 samples, 4.95%)</title><rect x="93.1093%" y="165" width="4.9469%" height="15" fill="rgb(252,35,15)" fg:x="1114200" fg:w="59198"/><text x="93.3593%" y="175.50">field:..</text></g><g><title>&lt;field::quartic::Mersenne31Quartic as field::field::Field&gt;::fused_mul_add_assign (22,956 samples, 1.92%)</title><rect x="96.1379%" y="149" width="1.9183%" height="15" fill="rgb(248,181,18)" fg:x="1150442" fg:w="22956"/><text x="96.3879%" y="159.50">&lt;..</text></g><g><title>field::quartic::fma_implementation_via_delegation (22,956 samples, 1.92%)</title><rect x="96.1379%" y="133" width="1.9183%" height="15" fill="rgb(233,39,42)" fg:x="1150442" fg:w="22956"/><text x="96.3879%" y="143.50">f..</text></g><g><title>verifier_common::fri_folding::fri_fold_by_log_n_with_fma (187,458 samples, 15.67%)</title><rect x="83.2105%" y="181" width="15.6651%" height="15" fill="rgb(238,110,33)" fg:x="995745" fg:w="187458"/><text x="83.4605%" y="191.50">verifier_common::fri_fol..</text></g><g><title>field::quartic::Mersenne31Quartic::square_with_fma (9,805 samples, 0.82%)</title><rect x="98.0563%" y="165" width="0.8194%" height="15" fill="rgb(233,195,10)" fg:x="1173398" fg:w="9805"/><text x="98.3063%" y="175.50"></text></g><g><title>&lt;field::quartic::Mersenne31Quartic as field::field::Field&gt;::fused_mul_add_assign (3,180 samples, 0.27%)</title><rect x="98.6099%" y="149" width="0.2657%" height="15" fill="rgb(254,105,3)" fg:x="1180023" fg:w="3180"/><text x="98.8599%" y="159.50"></text></g><g><title>field::quartic::fma_implementation_via_delegation (3,180 samples, 0.27%)</title><rect x="98.6099%" y="133" width="0.2657%" height="15" fill="rgb(221,225,9)" fg:x="1180023" fg:w="3180"/><text x="98.8599%" y="143.50"></text></g><g><title>verifier_common::structs::assemble_query_index (11,448 samples, 0.96%)</title><rect x="98.8756%" y="181" width="0.9567%" height="15" fill="rgb(224,227,45)" fg:x="1183203" fg:w="11448"/><text x="99.1256%" y="191.50"></text></g><g><title>&lt;verifier_common::structs::BitSource as core::iter::traits::iterator::Iterator&gt;::next (7,102 samples, 0.59%)</title><rect x="99.2388%" y="165" width="0.5935%" height="15" fill="rgb(229,198,43)" fg:x="1187549" fg:w="7102"/><text x="99.4888%" y="175.50"></text></g><g><title>verifier::verify (1,196,610 samples, 100.00%)</title><rect x="0.0002%" y="213" width="99.9960%" height="15" fill="rgb(206,209,35)" fg:x="2" fg:w="1196610"/><text x="0.2502%" y="223.50">verifier::verify</text></g><g><title>verifier::verify_with_configuration (1,195,766 samples, 99.93%)</title><rect x="0.0707%" y="197" width="99.9255%" height="15" fill="rgb(245,195,53)" fg:x="846" fg:w="1195766"/><text x="0.3207%" y="207.50">verifier::verify_with_configuration</text></g><g><title>verifier_common::structs::bitreverse_for_bitlength (1,961 samples, 0.16%)</title><rect x="99.8323%" y="181" width="0.1639%" height="15" fill="rgb(240,92,26)" fg:x="1194651" fg:w="1961"/><text x="100.0823%" y="191.50"></text></g><g><title>core::num::&lt;impl u32&gt;::reverse_bits (1,802 samples, 0.15%)</title><rect x="99.8456%" y="165" width="0.1506%" height="15" fill="rgb(207,40,23)" fg:x="1194810" fg:w="1802"/><text x="100.0956%" y="175.50"></text></g><g><title>all (1,196,658 samples, 100%)</title><rect x="0.0000%" y="277" width="100.0000%" height="15" fill="rgb(223,111,35)" fg:x="0" fg:w="1196658"/><text x="0.2500%" y="287.50"></text></g><g><title>_start_rust (1,196,658 samples, 100.00%)</title><rect x="0.0000%" y="261" width="100.0000%" height="15" fill="rgb(229,147,28)" fg:x="0" fg:w="1196658"/><text x="0.2500%" y="271.50">_start_rust</text></g><g><title>zk_os::main (1,196,658 samples, 100.00%)</title><rect x="0.0000%" y="245" width="100.0000%" height="15" fill="rgb(211,29,28)" fg:x="0" fg:w="1196658"/><text x="0.2500%" y="255.50">zk_os::main</text></g><g><title>zk_os::workload (1,196,657 samples, 100.00%)</title><rect x="0.0001%" y="229" width="99.9999%" height="15" fill="rgb(228,72,33)" fg:x="1" fg:w="1196657"/><text x="0.2501%" y="239.50">zk_os::workload</text></g></svg></svg>